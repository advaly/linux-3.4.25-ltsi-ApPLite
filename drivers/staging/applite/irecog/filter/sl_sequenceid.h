/*
 * linux/drivers/staging/applite/irecog/filter/sl_sequenceid.h
 *
 * (C) Copyright TOSHIBA Corporation
 * Semiconductor & Storage Products Company 2012
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 */
#ifndef _SL_SEQUENCE_ID_H
#define _SL_SEQUENCE_ID_H

/*
// standard sequence id
// sequence id = n * 10 +  (width / 128 ) - 1
// (000 .. 479)
*/

#define SL_FILTER_ID_ADD_WEIGHTED 0
#define SL_FILTER_ID_MUL 1
#define SL_FILTER_ID_DIV 2
#define SL_FILTER_ID_CMP 3
#define SL_FILTER_ID_SOBEL_3 4
#define SL_FILTER_ID_LAPLACE_3 5
#define SL_FILTER_ID_CANNY_1ST 6
#define SL_FILTER_ID_CORNER_HARRIS 7
#define SL_FILTER_ID_ERODE 8
#define SL_FILTER_ID_DILATE 9
#define SL_FILTER_ID_MORPHOLOGY_EX_OPEN 10
#define SL_FILTER_ID_MORPHOLOGY_EX_CLOSE 11
#define SL_FILTER_ID_MORPHOLOGY_EX_GRADIENT 12
#define SL_FILTER_ID_MORPHOLOGY_EX_TOPHAT 13
#define SL_FILTER_ID_SMOOTH_BLUR_3 14
#define SL_FILTER_ID_SMOOTH_GAUSSIAN_3 15
#define SL_FILTER_ID_SMOOTH_MEDIAN_3 16
#define SL_FILTER_ID_CVT_COLOR_RGB_TO_YCBCR 17
#define SL_FILTER_ID_CVT_COLOR_YCBCR_TO_RGB 18
#define SL_FILTER_ID_CVT_COLOR_RGB_TO_HSV 19
#define SL_FILTER_ID_CVT_COLOR_HSV_TO_RGB 20
#define SL_FILTER_ID_CART_TO_POLAR 21
#define SL_FILTER_ID_SOBEL_5 22
#define SL_FILTER_ID_SOBEL_7 23
#define SL_FILTER_ID_SCHARR_3 24
#define SL_FILTER_ID_LAPLACE_5 25
#define SL_FILTER_ID_CORNER_MIN_EIGEN_VAL_5 26
#define SL_FILTER_ID_MORPHOLOGY_EX_BLACKHAT 27
#define SL_FILTER_ID_SMOOTH_SUM_3 28
#define SL_FILTER_ID_SMOOTH_GAUSSIAN_5 29
#define SL_FILTER_ID_SMOOTH_BILATERAL_3 30
#define SL_FILTER_ID_CVT_COLOR_RGB_TO_XYZ 31
#define SL_FILTER_ID_CVT_COLOR_XYZ_TO_RGB 32
#define SL_FILTER_ID_CVT_COLOR_RGB_TO_HLS 33
#define SL_FILTER_ID_CVT_COLOR_HLS_TO_RGB 34
#define SL_FILTER_ID_CVT_COLOR_RGB_TO_LAB 35
#define SL_FILTER_ID_CVT_COLOR_LAB_TO_RGB 36
#define SL_FILTER_ID_CVT_COLOR_RGB_TO_LUV 37
#define SL_FILTER_ID_CVT_COLOR_LUV_TO_RGB 38
#define SL_FILTER_ID_CALC_OPTICAL_FLOW_LK 39
#define SL_FILTER_ID_PYR_DOWN 40
#define SL_FILTER_ID_PYR_UP 41
#define SL_FILTER_ID_NONMAX_D0 42
#define SL_FILTER_ID_NONMAX_D1 43
#define SL_FILTER_ID_NONMAX_D2 44
#define SL_FILTER_ID_NONMAX_D3 45

/*
// #define SL_FILTER_ID_DFT
// #define SL_FILTER_ID_INTEGRAL
*/

/*
// #define SL_FILTER_ID_DFT
// apeture sequence id
// sequence id = SL_FILTER_ID_APETURE_BASE + n * 10 * 7 +  (width / 128 ) - 1
// (460 .. 669)
*/
#define SL_FILTER_ID_APETURE_BASE 46
#define SL_FILTER_ID_FILTER_2D_BASE (SL_FILTER_ID_APETURE_BASE)
#define SL_FILTER_ID_FILTER_2D_3  (SL_FILTER_ID_FILTER_2D_BASE + 0)
#define SL_FILTER_ID_FILTER_2D_5  (SL_FILTER_ID_FILTER_2D_BASE + 1)
#define SL_FILTER_ID_FILTER_2D_7  (SL_FILTER_ID_FILTER_2D_BASE + 2)
#define SL_FILTER_ID_FILTER_2D_9  (SL_FILTER_ID_FILTER_2D_BASE + 3)
#define SL_FILTER_ID_FILTER_2D_11 (SL_FILTER_ID_FILTER_2D_BASE + 4)
#define SL_FILTER_ID_FILTER_2D_13 (SL_FILTER_ID_FILTER_2D_BASE + 5)
#define SL_FILTER_ID_FILTER_2D_15 (SL_FILTER_ID_FILTER_2D_BASE + 6)
#define SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_BASE (SL_FILTER_ID_APETURE_BASE + 7)
#define SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_3  (SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_BASE + 0)
#define SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_5  (SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_BASE + 1)
#define SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_7  (SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_BASE + 2)
#define SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_9  (SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_BASE + 3)
#define SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_11 (SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_BASE + 4)
#define SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_13 (SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_BASE + 5)
#define SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_15 (SL_FILTER_ID_MATCH_TEMPLATE_SQDIFF_BASE + 6)
#define SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_BASE (SL_FILTER_ID_APETURE_BASE + 14)
#define SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_3  (SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_BASE + 0)
#define SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_5  (SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_BASE + 1)
#define SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_7  (SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_BASE + 2)
#define SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_9  (SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_BASE + 3)
#define SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_11 (SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_BASE + 4)
#define SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_13 (SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_BASE + 5)
#define SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_15 (SL_FILTER_ID_MATCH_TEMPLATE_CCOEFF_NORMED_BASE + 6)

/*
// filter sequence id
// sequence id = SL_FILTER_ID_TC_BASE + n * 10 +  (width / 128 ) - 1
// (670 .. 889)
*/
#define SL_FILTER_ID_TC_BASE    (67)
#define SL_FILTER_ID_ADD        (SL_FILTER_ID_TC_BASE + 0)
#define SL_FILTER_ID_ADD_S      (SL_FILTER_ID_TC_BASE + 1)
#define SL_FILTER_ID_SUB        (SL_FILTER_ID_TC_BASE + 2)
#define SL_FILTER_ID_SUB_S      (SL_FILTER_ID_TC_BASE + 3)
#define SL_FILTER_ID_SUB_R_S    (SL_FILTER_ID_TC_BASE + 4)
#define SL_FILTER_ID_AND        (SL_FILTER_ID_TC_BASE + 5)
#define SL_FILTER_ID_AND_S      (SL_FILTER_ID_TC_BASE + 6)
#define SL_FILTER_ID_OR         (SL_FILTER_ID_TC_BASE + 7)
#define SL_FILTER_ID_OR_S       (SL_FILTER_ID_TC_BASE + 8)
#define SL_FILTER_ID_XOR        (SL_FILTER_ID_TC_BASE + 9)
#define SL_FILTER_ID_XOR_S      (SL_FILTER_ID_TC_BASE + 10)
#define SL_FILTER_ID_NOT        (SL_FILTER_ID_TC_BASE + 11)
#define SL_FILTER_ID_CMP_S      (SL_FILTER_ID_TC_BASE + 12)
#define SL_FILTER_ID_IN_RANGE   (SL_FILTER_ID_TC_BASE + 13)
#define SL_FILTER_ID_IN_RANGE_S (SL_FILTER_ID_TC_BASE + 14)
#define SL_FILTER_ID_MAX        (SL_FILTER_ID_TC_BASE + 15)
#define SL_FILTER_ID_MAX_S      (SL_FILTER_ID_TC_BASE + 16)
#define SL_FILTER_ID_MIN        (SL_FILTER_ID_TC_BASE + 17)
#define SL_FILTER_ID_MIN_S      (SL_FILTER_ID_TC_BASE + 18)
#define SL_FILTER_ID_ABS_DIFF   (SL_FILTER_ID_TC_BASE + 19)
#define SL_FILTER_ID_ABS_DIFF_S (SL_FILTER_ID_TC_BASE + 20)
#define SL_FILTER_ID_PREWITT_3  (SL_FILTER_ID_TC_BASE + 21)

/*
// ADD NEW ID(s) BELOW THIS LINE
// (890 .. 1149)
*/
#define SL_FILTER_ID_BAYER_DEMOSAIC_ACPI        (SL_FILTER_ID_TC_BASE + 22)
#define SL_FILTER_ID_BAYER_DEMOSAIC_BICUBIC     (SL_FILTER_ID_TC_BASE + 23)
#define SL_FILTER_ID_BAYER_DEMOSAIC_BILINEAR_3  (SL_FILTER_ID_TC_BASE + 24)
#define SL_FILTER_ID_BAYER_DEMOSAIC_BILINEAR_5  (SL_FILTER_ID_TC_BASE + 25)
#define SL_FILTER_ID_DIRECTION_3                (SL_FILTER_ID_TC_BASE + 26)
#define SL_FILTER_ID_EPSILON_3                  (SL_FILTER_ID_TC_BASE + 27)
#define SL_FILTER_ID_EPSILON_5                  (SL_FILTER_ID_TC_BASE + 28)
#define SL_FILTER_ID_EPSILON_7                  (SL_FILTER_ID_TC_BASE + 29)
#define SL_FILTER_ID_FAST_N9                    (SL_FILTER_ID_TC_BASE + 30)
#define SL_FILTER_ID_BILATERAL_3                (SL_FILTER_ID_TC_BASE + 31)
#define SL_FILTER_ID_DIV_S                      (SL_FILTER_ID_TC_BASE + 32)
#define SL_FILTER_ID_DIV_R_S                    (SL_FILTER_ID_TC_BASE + 33)
#define SL_FILTER_ID_CONV_UC2SS                 (SL_FILTER_ID_TC_BASE + 34)
#define SL_FILTER_ID_CONV_SS2UC                 (SL_FILTER_ID_TC_BASE + 35)
#define SL_FILTER_ID_LBP                        (SL_FILTER_ID_TC_BASE + 36)
#define SL_FILTER_ID_ZERO_MEAN_2                (SL_FILTER_ID_TC_BASE + 37)
#define SL_FILTER_ID_ZERO_MEAN_3                (SL_FILTER_ID_TC_BASE + 38)
#define SL_FILTER_ID_ZERO_MEAN_4                (SL_FILTER_ID_TC_BASE + 39)
#define SL_FILTER_ID_ZERO_MEAN_5                (SL_FILTER_ID_TC_BASE + 40)
#define SL_FILTER_ID_ZERO_MEAN_6                (SL_FILTER_ID_TC_BASE + 41)
#define SL_FILTER_ID_ZERO_MEAN_7                (SL_FILTER_ID_TC_BASE + 42)
#define SL_FILTER_ID_ZERO_MEAN_8                (SL_FILTER_ID_TC_BASE + 43)
#define SL_FILTER_ID_ZERO_MEAN_9                (SL_FILTER_ID_TC_BASE + 44)
#define SL_FILTER_ID_ZERO_MEAN_10               (SL_FILTER_ID_TC_BASE + 45)
#define SL_FILTER_ID_ZERO_MEAN_11               (SL_FILTER_ID_TC_BASE + 46)
#define SL_FILTER_ID_SET_VALUE_FILTER           (SL_FILTER_ID_TC_BASE + 47)

/*
// ADD NEW ID(s) BELOW THIS LINE
// (1150 ..)
*/
#define SL_FILTER_LAST_ID       (SL_FILTER_ID_SET_VALUE_FILTER + 1)

typedef enum {
	THGR3_VIS2_FW_FILTER_SEQUENCE_direction3x3 = SL_FILTER_LAST_ID,
	THGR3_VIS2_FW_FILTER_SEQUENCE_direction3x3_with_inte,
	THGR3_VIS2_FW_FILTER_SEQUENCE_direction3x3_and_intensity,
	THGR3_VIS2_FW_FILTER_SEQUENCE_direction3x3_and_intensity_with_threshold,
	THGR3_VIS2_FW_FILTER_SEQUENCE_rgb2ycbcr,
	THGR3_VIS2_FW_FILTER_SEQUENCE_shrink_image_half,
	THGR3_VIS2_FW_FILTER_SEQUENCE_shrink_image_quarter,
	THGR3_VIS2_FW_FILTER_SEQUENCE_average_image,
	THGR3_VIS2_FW_FILTER_SEQUENCE_tonemapping_luma,	/* 1230 */
	THGR3_VIS2_FW_FILTER_SEQUENCE_tonemapping_luma_1408,
	THGR3_VIS2_FW_FILTER_SEQUENCE_correct_color,	/* 1250 */
	THGR3_VIS2_FW_FILTER_SEQUENCE_correct_color_1408,
	THGR3_VIS2_FW_FILTER_SEQUENCE_noise_reduction_y,	/* 1270 */
	THGR3_VIS2_FW_FILTER_SEQUENCE_noise_reduction_y_1408,
	THGR3_VIS2_FW_FILTER_SEQUENCE_noise_reduction_uv,	/* 1290 */
	THGR3_VIS2_FW_FILTER_SEQUENCE_noise_reduction_uv_1408,
	THGR3_VIS2_FW_FILTER_SEQUENCE_NUM
} THGR3_VIS2_FW_FILTER_SEQUENCE_KIND;

#endif
