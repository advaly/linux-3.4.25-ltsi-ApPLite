/*
 * arch/arm/mach-tz3000/include/mach/regs/emmca_reg_def.h
 *
 * (C) Copyright TOSHIBA Corporation
 * Semiconductor & Storage Products Company 2013
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#ifndef _EMMCA_REG_DEF_H
#define _EMMCA_REG_DEF_H

#ifdef __cplusplus
extern  {
#endif /* __cplusplus */

// SDMA_System_Address_Argument_2 Register
#define EMMCA_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_OFS 0x00000000
// SDMA_System_Address_Argument_2 bitfiled (RW) Reset=0
#define EMMCA_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_MASK 0xFFFFFFFF
#define EMMCA_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_SHIFT 0 
#define EMMCA_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_BIT 0xFFFFFFFF
#define EMMCA_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_SDMA_SYSTEM_ADDRESS_ARGUMENT_2_BITWIDTH 32
// Block_Count_Block_Size Register
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_OFS         0x00000004
// Transfer_Block_Size bitfiled (RW) Reset=0
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_TRANSFER_BLOCK_SIZE_MASK 0xFFF
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_TRANSFER_BLOCK_SIZE_SHIFT 0 
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_TRANSFER_BLOCK_SIZE_BIT 0xFFF
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_TRANSFER_BLOCK_SIZE_BITWIDTH 12
// Host_SDMA_Buffer_Size bitfiled (RW) Reset=0
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_HOST_SDMA_BUFFER_SIZE_MASK 0x7000
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_HOST_SDMA_BUFFER_SIZE_SHIFT 12 
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_HOST_SDMA_BUFFER_SIZE_BIT 0x7
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_HOST_SDMA_BUFFER_SIZE_BITWIDTH 3
// Reserved bitfiled (RO) Reset=0
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_RESERVED_MASK 0x8000
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_RESERVED_SHIFT 15 
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_RESERVED_BIT 0x1
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_RESERVED_BITWIDTH 1
// Blocks_Count_for_Current_Transfer bitfiled (RW) Reset=0
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_BLOCKS_COUNT_FOR_CURRENT_TRANSFER_MASK 0xFFFF0000
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_BLOCKS_COUNT_FOR_CURRENT_TRANSFER_SHIFT 16 
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_BLOCKS_COUNT_FOR_CURRENT_TRANSFER_BIT 0xFFFF
#define EMMCA_BLOCK_COUNT_BLOCK_SIZE_BLOCKS_COUNT_FOR_CURRENT_TRANSFER_BITWIDTH 16
// Argument_1 Register
#define EMMCA_ARGUMENT_1_OFS                     0x00000008
// Command_Argument_1 bitfiled (RW) Reset=0
#define EMMCA_ARGUMENT_1_COMMAND_ARGUMENT_1_MASK 0xFFFFFFFF
#define EMMCA_ARGUMENT_1_COMMAND_ARGUMENT_1_SHIFT 0 
#define EMMCA_ARGUMENT_1_COMMAND_ARGUMENT_1_BIT  0xFFFFFFFF
#define EMMCA_ARGUMENT_1_COMMAND_ARGUMENT_1_BITWIDTH 32
// Command_Transfer_Mode Register
#define EMMCA_COMMAND_TRANSFER_MODE_OFS          0x0000000C
// DMA_Enable bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_DMA_ENABLE_MASK 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_DMA_ENABLE_SHIFT 0 
#define EMMCA_COMMAND_TRANSFER_MODE_DMA_ENABLE_BIT 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_DMA_ENABLE_BITWIDTH 1
// Block_Count_Enable bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_BLOCK_COUNT_ENABLE_MASK 0x2
#define EMMCA_COMMAND_TRANSFER_MODE_BLOCK_COUNT_ENABLE_SHIFT 1 
#define EMMCA_COMMAND_TRANSFER_MODE_BLOCK_COUNT_ENABLE_BIT 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_BLOCK_COUNT_ENABLE_BITWIDTH 1
// Auto_CMD_Enable bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_AUTO_CMD_ENABLE_MASK 0xC
#define EMMCA_COMMAND_TRANSFER_MODE_AUTO_CMD_ENABLE_SHIFT 2 
#define EMMCA_COMMAND_TRANSFER_MODE_AUTO_CMD_ENABLE_BIT 0x3
#define EMMCA_COMMAND_TRANSFER_MODE_AUTO_CMD_ENABLE_BITWIDTH 2
// Data_Transfer_Direction_Select bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_SELECT_MASK 0x10
#define EMMCA_COMMAND_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_SELECT_SHIFT 4 
#define EMMCA_COMMAND_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_SELECT_BIT 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_DATA_TRANSFER_DIRECTION_SELECT_BITWIDTH 1
// Multi_Single_Block_Select bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_MULTI_SINGLE_BLOCK_SELECT_MASK 0x20
#define EMMCA_COMMAND_TRANSFER_MODE_MULTI_SINGLE_BLOCK_SELECT_SHIFT 5 
#define EMMCA_COMMAND_TRANSFER_MODE_MULTI_SINGLE_BLOCK_SELECT_BIT 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_MULTI_SINGLE_BLOCK_SELECT_BITWIDTH 1
// Reserved3 bitfiled (RO) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED3_MASK 0xFFC0
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED3_SHIFT 6 
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED3_BIT 0x3FF
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED3_BITWIDTH 10
// Response_Type_Select bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_RESPONSE_TYPE_SELECT_MASK 0x30000
#define EMMCA_COMMAND_TRANSFER_MODE_RESPONSE_TYPE_SELECT_SHIFT 16 
#define EMMCA_COMMAND_TRANSFER_MODE_RESPONSE_TYPE_SELECT_BIT 0x3
#define EMMCA_COMMAND_TRANSFER_MODE_RESPONSE_TYPE_SELECT_BITWIDTH 2
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED2_MASK 0x40000
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED2_SHIFT 18 
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED2_BIT 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED2_BITWIDTH 1
// Command_CRC_Check_Enable bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_CRC_CHECK_ENABLE_MASK 0x80000
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_CRC_CHECK_ENABLE_SHIFT 19 
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_CRC_CHECK_ENABLE_BIT 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_CRC_CHECK_ENABLE_BITWIDTH 1
// Command_Index_Check_Enable bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_INDEX_CHECK_ENABLE_MASK 0x100000
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_INDEX_CHECK_ENABLE_SHIFT 20 
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_INDEX_CHECK_ENABLE_BIT 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_INDEX_CHECK_ENABLE_BITWIDTH 1
// Data_Present_Select bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_DATA_PRESENT_SELECT_MASK 0x200000
#define EMMCA_COMMAND_TRANSFER_MODE_DATA_PRESENT_SELECT_SHIFT 21 
#define EMMCA_COMMAND_TRANSFER_MODE_DATA_PRESENT_SELECT_BIT 0x1
#define EMMCA_COMMAND_TRANSFER_MODE_DATA_PRESENT_SELECT_BITWIDTH 1
// Command_Type bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_TYPE_MASK 0xC00000
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_TYPE_SHIFT 22 
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_TYPE_BIT 0x3
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_TYPE_BITWIDTH 2
// Command_Index bitfiled (RW) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_INDEX_MASK 0x3F000000
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_INDEX_SHIFT 24 
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_INDEX_BIT 0x3F
#define EMMCA_COMMAND_TRANSFER_MODE_COMMAND_INDEX_BITWIDTH 6
// Reserved bitfiled (RO) Reset=0
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED_MASK 0xC0000000
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED_SHIFT 30 
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED_BIT 0x3
#define EMMCA_COMMAND_TRANSFER_MODE_RESERVED_BITWIDTH 2
// Response_0 Register
#define EMMCA_RESPONSE_0_OFS                     0x00000010
// Command_Response_0 bitfiled (RO) Reset=0
#define EMMCA_RESPONSE_0_COMMAND_RESPONSE_0_MASK 0xFFFFFFFF
#define EMMCA_RESPONSE_0_COMMAND_RESPONSE_0_SHIFT 0 
#define EMMCA_RESPONSE_0_COMMAND_RESPONSE_0_BIT  0xFFFFFFFF
#define EMMCA_RESPONSE_0_COMMAND_RESPONSE_0_BITWIDTH 32
// Response_1 Register
#define EMMCA_RESPONSE_1_OFS                     0x00000014
// Command_Response_1 bitfiled (RO) Reset=0
#define EMMCA_RESPONSE_1_COMMAND_RESPONSE_1_MASK 0xFFFFFFFF
#define EMMCA_RESPONSE_1_COMMAND_RESPONSE_1_SHIFT 0 
#define EMMCA_RESPONSE_1_COMMAND_RESPONSE_1_BIT  0xFFFFFFFF
#define EMMCA_RESPONSE_1_COMMAND_RESPONSE_1_BITWIDTH 32
// Response_2 Register
#define EMMCA_RESPONSE_2_OFS                     0x00000018
// Command_Response_2 bitfiled (RO) Reset=0
#define EMMCA_RESPONSE_2_COMMAND_RESPONSE_2_MASK 0xFFFFFFFF
#define EMMCA_RESPONSE_2_COMMAND_RESPONSE_2_SHIFT 0 
#define EMMCA_RESPONSE_2_COMMAND_RESPONSE_2_BIT  0xFFFFFFFF
#define EMMCA_RESPONSE_2_COMMAND_RESPONSE_2_BITWIDTH 32
// Response_3 Register
#define EMMCA_RESPONSE_3_OFS                     0x0000001C
// Command_Response_3 bitfiled (RO) Reset=0
#define EMMCA_RESPONSE_3_COMMAND_RESPONSE_3_MASK 0xFFFFFFFF
#define EMMCA_RESPONSE_3_COMMAND_RESPONSE_3_SHIFT 0 
#define EMMCA_RESPONSE_3_COMMAND_RESPONSE_3_BIT  0xFFFFFFFF
#define EMMCA_RESPONSE_3_COMMAND_RESPONSE_3_BITWIDTH 32
// Buffer_Data_Port Register
#define EMMCA_BUFFER_DATA_PORT_OFS               0x00000020
// Buffer_Data bitfiled (RW) Reset=0
#define EMMCA_BUFFER_DATA_PORT_BUFFER_DATA_MASK  0xFFFFFFFF
#define EMMCA_BUFFER_DATA_PORT_BUFFER_DATA_SHIFT 0 
#define EMMCA_BUFFER_DATA_PORT_BUFFER_DATA_BIT   0xFFFFFFFF
#define EMMCA_BUFFER_DATA_PORT_BUFFER_DATA_BITWIDTH 32
// Present_State Register
#define EMMCA_PRESENT_STATE_OFS                  0x00000024
// Command_Inhibit_CMD bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_COMMAND_INHIBIT_CMD_MASK 0x1
#define EMMCA_PRESENT_STATE_COMMAND_INHIBIT_CMD_SHIFT 0 
#define EMMCA_PRESENT_STATE_COMMAND_INHIBIT_CMD_BIT 0x1
#define EMMCA_PRESENT_STATE_COMMAND_INHIBIT_CMD_BITWIDTH 1
// Command_Inhibit_DAT bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_COMMAND_INHIBIT_DAT_MASK 0x2
#define EMMCA_PRESENT_STATE_COMMAND_INHIBIT_DAT_SHIFT 1 
#define EMMCA_PRESENT_STATE_COMMAND_INHIBIT_DAT_BIT 0x1
#define EMMCA_PRESENT_STATE_COMMAND_INHIBIT_DAT_BITWIDTH 1
// DAT_Line_Active bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_DAT_LINE_ACTIVE_MASK 0x4
#define EMMCA_PRESENT_STATE_DAT_LINE_ACTIVE_SHIFT 2 
#define EMMCA_PRESENT_STATE_DAT_LINE_ACTIVE_BIT  0x1
#define EMMCA_PRESENT_STATE_DAT_LINE_ACTIVE_BITWIDTH 1
// Re_Tuning_Request bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_RE_TUNING_REQUEST_MASK 0x8
#define EMMCA_PRESENT_STATE_RE_TUNING_REQUEST_SHIFT 3 
#define EMMCA_PRESENT_STATE_RE_TUNING_REQUEST_BIT 0x1
#define EMMCA_PRESENT_STATE_RE_TUNING_REQUEST_BITWIDTH 1
// Reserved3 bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_RESERVED3_MASK       0xF0
#define EMMCA_PRESENT_STATE_RESERVED3_SHIFT      4 
#define EMMCA_PRESENT_STATE_RESERVED3_BIT        0xF
#define EMMCA_PRESENT_STATE_RESERVED3_BITWIDTH   4
// Write_Transfer_Active bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_WRITE_TRANSFER_ACTIVE_MASK 0x100
#define EMMCA_PRESENT_STATE_WRITE_TRANSFER_ACTIVE_SHIFT 8 
#define EMMCA_PRESENT_STATE_WRITE_TRANSFER_ACTIVE_BIT 0x1
#define EMMCA_PRESENT_STATE_WRITE_TRANSFER_ACTIVE_BITWIDTH 1
// Read_Transfer_Active bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_READ_TRANSFER_ACTIVE_MASK 0x200
#define EMMCA_PRESENT_STATE_READ_TRANSFER_ACTIVE_SHIFT 9 
#define EMMCA_PRESENT_STATE_READ_TRANSFER_ACTIVE_BIT 0x1
#define EMMCA_PRESENT_STATE_READ_TRANSFER_ACTIVE_BITWIDTH 1
// Buffer_Write_Enable bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_BUFFER_WRITE_ENABLE_MASK 0x400
#define EMMCA_PRESENT_STATE_BUFFER_WRITE_ENABLE_SHIFT 10 
#define EMMCA_PRESENT_STATE_BUFFER_WRITE_ENABLE_BIT 0x1
#define EMMCA_PRESENT_STATE_BUFFER_WRITE_ENABLE_BITWIDTH 1
// Buffer_Read_Enable bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_BUFFER_READ_ENABLE_MASK 0x800
#define EMMCA_PRESENT_STATE_BUFFER_READ_ENABLE_SHIFT 11 
#define EMMCA_PRESENT_STATE_BUFFER_READ_ENABLE_BIT 0x1
#define EMMCA_PRESENT_STATE_BUFFER_READ_ENABLE_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_RESERVED2_MASK       0xF000
#define EMMCA_PRESENT_STATE_RESERVED2_SHIFT      12 
#define EMMCA_PRESENT_STATE_RESERVED2_BIT        0xF
#define EMMCA_PRESENT_STATE_RESERVED2_BITWIDTH   4
// Card_Inserted bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_CARD_INSERTED_MASK   0x10000
#define EMMCA_PRESENT_STATE_CARD_INSERTED_SHIFT  16 
#define EMMCA_PRESENT_STATE_CARD_INSERTED_BIT    0x1
#define EMMCA_PRESENT_STATE_CARD_INSERTED_BITWIDTH 1
// Card_State_Stable bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_CARD_STATE_STABLE_MASK 0x20000
#define EMMCA_PRESENT_STATE_CARD_STATE_STABLE_SHIFT 17 
#define EMMCA_PRESENT_STATE_CARD_STATE_STABLE_BIT 0x1
#define EMMCA_PRESENT_STATE_CARD_STATE_STABLE_BITWIDTH 1
// Card_Detect_Pin_Level bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_CARD_DETECT_PIN_LEVEL_MASK 0x40000
#define EMMCA_PRESENT_STATE_CARD_DETECT_PIN_LEVEL_SHIFT 18 
#define EMMCA_PRESENT_STATE_CARD_DETECT_PIN_LEVEL_BIT 0x1
#define EMMCA_PRESENT_STATE_CARD_DETECT_PIN_LEVEL_BITWIDTH 1
// Write_Protect_Switch_Pin_Level bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_WRITE_PROTECT_SWITCH_PIN_LEVEL_MASK 0x80000
#define EMMCA_PRESENT_STATE_WRITE_PROTECT_SWITCH_PIN_LEVEL_SHIFT 19 
#define EMMCA_PRESENT_STATE_WRITE_PROTECT_SWITCH_PIN_LEVEL_BIT 0x1
#define EMMCA_PRESENT_STATE_WRITE_PROTECT_SWITCH_PIN_LEVEL_BITWIDTH 1
// DAT_Lower_Line_Signal_Level bitfiled (RO) Reset=1111
#define EMMCA_PRESENT_STATE_DAT_LOWER_LINE_SIGNAL_LEVEL_MASK 0xF00000
#define EMMCA_PRESENT_STATE_DAT_LOWER_LINE_SIGNAL_LEVEL_SHIFT 20 
#define EMMCA_PRESENT_STATE_DAT_LOWER_LINE_SIGNAL_LEVEL_BIT 0xF
#define EMMCA_PRESENT_STATE_DAT_LOWER_LINE_SIGNAL_LEVEL_BITWIDTH 4
// CMD_Line_Signal_Level bitfiled (RO) Reset=1
#define EMMCA_PRESENT_STATE_CMD_LINE_SIGNAL_LEVEL_MASK 0x1000000
#define EMMCA_PRESENT_STATE_CMD_LINE_SIGNAL_LEVEL_SHIFT 24 
#define EMMCA_PRESENT_STATE_CMD_LINE_SIGNAL_LEVEL_BIT 0x1
#define EMMCA_PRESENT_STATE_CMD_LINE_SIGNAL_LEVEL_BITWIDTH 1
// DAT_Upper_Line_Signal_Level bitfiled (RO) Reset=1111
#define EMMCA_PRESENT_STATE_DAT_UPPER_LINE_SIGNAL_LEVEL_MASK 0x1E000000
#define EMMCA_PRESENT_STATE_DAT_UPPER_LINE_SIGNAL_LEVEL_SHIFT 25 
#define EMMCA_PRESENT_STATE_DAT_UPPER_LINE_SIGNAL_LEVEL_BIT 0xF
#define EMMCA_PRESENT_STATE_DAT_UPPER_LINE_SIGNAL_LEVEL_BITWIDTH 4
// Reserved bitfiled (RO) Reset=0
#define EMMCA_PRESENT_STATE_RESERVED_MASK        0xE0000000
#define EMMCA_PRESENT_STATE_RESERVED_SHIFT       29 
#define EMMCA_PRESENT_STATE_RESERVED_BIT         0x7
#define EMMCA_PRESENT_STATE_RESERVED_BITWIDTH    3
// Wakeup_Control_Block_Gap_Control_Power_Control_Host_Control_1 Register
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_OFS 0x00000028
// LED_Control bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_LED_CONTROL_MASK 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_LED_CONTROL_SHIFT 0 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_LED_CONTROL_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_LED_CONTROL_BITWIDTH 1
// Data_Transfer_Width bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_DATA_TRANSFER_WIDTH_MASK 0x2
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_DATA_TRANSFER_WIDTH_SHIFT 1 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_DATA_TRANSFER_WIDTH_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_DATA_TRANSFER_WIDTH_BITWIDTH 1
// High_Speed_Enable bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_HIGH_SPEED_ENABLE_MASK 0x4
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_HIGH_SPEED_ENABLE_SHIFT 2 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_HIGH_SPEED_ENABLE_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_HIGH_SPEED_ENABLE_BITWIDTH 1
// DMA_Select bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_DMA_SELECT_MASK 0x18
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_DMA_SELECT_SHIFT 3 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_DMA_SELECT_BIT 0x3
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_DMA_SELECT_BITWIDTH 2
// Extended_Data_Transfer_Width bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_EXTENDED_DATA_TRANSFER_WIDTH_MASK 0x20
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_EXTENDED_DATA_TRANSFER_WIDTH_SHIFT 5 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_EXTENDED_DATA_TRANSFER_WIDTH_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_EXTENDED_DATA_TRANSFER_WIDTH_BITWIDTH 1
// Card_Detect_Test_Level bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CARD_DETECT_TEST_LEVEL_MASK 0x40
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CARD_DETECT_TEST_LEVEL_SHIFT 6 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CARD_DETECT_TEST_LEVEL_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CARD_DETECT_TEST_LEVEL_BITWIDTH 1
// Card_detect_signal_detection bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CARD_DETECT_SIGNAL_DETECTION_MASK 0x80
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CARD_DETECT_SIGNAL_DETECTION_SHIFT 7 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CARD_DETECT_SIGNAL_DETECTION_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CARD_DETECT_SIGNAL_DETECTION_BITWIDTH 1
// SD_Bus_Power bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SD_BUS_POWER_MASK 0x100
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SD_BUS_POWER_SHIFT 8 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SD_BUS_POWER_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SD_BUS_POWER_BITWIDTH 1
// SD_Bus_Voltage_Select bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SD_BUS_VOLTAGE_SELECT_MASK 0xE00
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SD_BUS_VOLTAGE_SELECT_SHIFT 9 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SD_BUS_VOLTAGE_SELECT_BIT 0x7
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SD_BUS_VOLTAGE_SELECT_BITWIDTH 3
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_RESERVED2_MASK 0xF000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_RESERVED2_SHIFT 12 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_RESERVED2_BIT 0xF
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_RESERVED2_BITWIDTH 4
// Stop_At_Block_Gap_Request bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_STOP_AT_BLOCK_GAP_REQUEST_MASK 0x10000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_STOP_AT_BLOCK_GAP_REQUEST_SHIFT 16 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_STOP_AT_BLOCK_GAP_REQUEST_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_STOP_AT_BLOCK_GAP_REQUEST_BITWIDTH 1
// Continue_Request bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CONTINUE_REQUEST_MASK 0x20000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CONTINUE_REQUEST_SHIFT 17 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CONTINUE_REQUEST_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_CONTINUE_REQUEST_BITWIDTH 1
// Read_Wait_Control bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_READ_WAIT_CONTROL_MASK 0x40000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_READ_WAIT_CONTROL_SHIFT 18 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_READ_WAIT_CONTROL_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_READ_WAIT_CONTROL_BITWIDTH 1
// Interrupt_At_Block_Gap bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_INTERRUPT_AT_BLOCK_GAP_MASK 0x80000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_INTERRUPT_AT_BLOCK_GAP_SHIFT 19 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_INTERRUPT_AT_BLOCK_GAP_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_INTERRUPT_AT_BLOCK_GAP_BITWIDTH 1
// SPI_MODE bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SPI_MODE_MASK 0x100000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SPI_MODE_SHIFT 20 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SPI_MODE_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_SPI_MODE_BITWIDTH 1
// BOOT_EN bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_BOOT_EN_MASK 0x200000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_BOOT_EN_SHIFT 21 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_BOOT_EN_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_BOOT_EN_BITWIDTH 1
// alt_boot_en bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_ALT_BOOT_EN_MASK 0x400000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_ALT_BOOT_EN_SHIFT 22 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_ALT_BOOT_EN_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_ALT_BOOT_EN_BITWIDTH 1
// boot_ack_chk bitfiled (RW) Reset=1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_BOOT_ACK_CHK_MASK 0x800000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_BOOT_ACK_CHK_SHIFT 23 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_BOOT_ACK_CHK_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_BOOT_ACK_CHK_BITWIDTH 1
// Wakeup_Event_Enable_On_Card_Interrupt bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_CARD_INTERRUPT_MASK 0x1000000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_CARD_INTERRUPT_SHIFT 24 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_CARD_INTERRUPT_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_CARD_INTERRUPT_BITWIDTH 1
// Wakeup_Event_Enable_On_SD_Card_Insertion bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_SD_CARD_INSERTION_MASK 0x2000000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_SD_CARD_INSERTION_SHIFT 25 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_SD_CARD_INSERTION_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_SD_CARD_INSERTION_BITWIDTH 1
// Wakeup_Event_Enable_On_SD_Card_Removal bitfiled (RW) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_SD_CARD_REMOVAL_MASK 0x4000000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_SD_CARD_REMOVAL_SHIFT 26 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_SD_CARD_REMOVAL_BIT 0x1
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_WAKEUP_EVENT_ENABLE_ON_SD_CARD_REMOVAL_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_RESERVED_MASK 0xF8000000
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_RESERVED_SHIFT 27 
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_RESERVED_BIT 0x1F
#define EMMCA_WAKEUP_CONTROL_BLOCK_GAP_CONTROL_POWER_CONTROL_HOST_CONTROL_1_RESERVED_BITWIDTH 5
// Software_Reset_Timeout_Control_Clock_Control Register
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_OFS 0x0000002C
// Internal_Clock_Enable bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE_MASK 0x1
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE_SHIFT 0 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE_BIT 0x1
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_INTERNAL_CLOCK_ENABLE_BITWIDTH 1
// Internal_Clock_Stable bitfiled (RO) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE_MASK 0x2
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE_SHIFT 1 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE_BIT 0x1
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_INTERNAL_CLOCK_STABLE_BITWIDTH 1
// SD_Clock_Enable bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SD_CLOCK_ENABLE_MASK 0x4
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SD_CLOCK_ENABLE_SHIFT 2 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SD_CLOCK_ENABLE_BIT 0x1
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SD_CLOCK_ENABLE_BITWIDTH 1
// Reserved3 bitfiled (RO) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED3_MASK 0x18
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED3_SHIFT 3 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED3_BIT 0x3
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED3_BITWIDTH 2
// Clock_Generator_Select bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_CLOCK_GENERATOR_SELECT_MASK 0x20
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_CLOCK_GENERATOR_SELECT_SHIFT 5 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_CLOCK_GENERATOR_SELECT_BIT 0x1
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_CLOCK_GENERATOR_SELECT_BITWIDTH 1
// Upper_Bits_of_SDCLK_Frequency_Select bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_UPPER_BITS_OF_SDCLK_FREQUENCY_SELECT_MASK 0xC0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_UPPER_BITS_OF_SDCLK_FREQUENCY_SELECT_SHIFT 6 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_UPPER_BITS_OF_SDCLK_FREQUENCY_SELECT_BIT 0x3
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_UPPER_BITS_OF_SDCLK_FREQUENCY_SELECT_BITWIDTH 2
// SDCLK_Frequency_Select bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SDCLK_FREQUENCY_SELECT_MASK 0xFF00
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SDCLK_FREQUENCY_SELECT_SHIFT 8 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SDCLK_FREQUENCY_SELECT_BIT 0xFF
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SDCLK_FREQUENCY_SELECT_BITWIDTH 8
// Data_Timeout_Counter_Value bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_DATA_TIMEOUT_COUNTER_VALUE_MASK 0xF0000
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_DATA_TIMEOUT_COUNTER_VALUE_SHIFT 16 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_DATA_TIMEOUT_COUNTER_VALUE_BIT 0xF
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_DATA_TIMEOUT_COUNTER_VALUE_BITWIDTH 4
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED2_MASK 0xF00000
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED2_SHIFT 20 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED2_BIT 0xF
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED2_BITWIDTH 4
// Software_Reset_for_All bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_ALL_MASK 0x1000000
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_ALL_SHIFT 24 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_ALL_BIT 0x1
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_ALL_BITWIDTH 1
// Software_Reset_for_CMD_Line bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_CMD_LINE_MASK 0x2000000
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_CMD_LINE_SHIFT 25 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_CMD_LINE_BIT 0x1
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_CMD_LINE_BITWIDTH 1
// Software_Reset_for_DAT_Line bitfiled (RW) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_DAT_LINE_MASK 0x4000000
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_DAT_LINE_SHIFT 26 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_DAT_LINE_BIT 0x1
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_SOFTWARE_RESET_FOR_DAT_LINE_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED_MASK 0xF8000000
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED_SHIFT 27 
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED_BIT 0x1F
#define EMMCA_SOFTWARE_RESET_TIMEOUT_CONTROL_CLOCK_CONTROL_RESERVED_BITWIDTH 5
// Error_Interrupt_Status_Normal_Interrupt_Status Register
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_OFS 0x00000030
// Command_Complete bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_COMPLETE_MASK 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_COMPLETE_SHIFT 0 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_COMPLETE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_COMPLETE_BITWIDTH 1
// Transfer_Complete bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TRANSFER_COMPLETE_MASK 0x2
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TRANSFER_COMPLETE_SHIFT 1 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TRANSFER_COMPLETE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TRANSFER_COMPLETE_BITWIDTH 1
// Block_Gap_Event bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BLOCK_GAP_EVENT_MASK 0x4
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BLOCK_GAP_EVENT_SHIFT 2 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BLOCK_GAP_EVENT_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BLOCK_GAP_EVENT_BITWIDTH 1
// DMA_Interrupt bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DMA_INTERRUPT_MASK 0x8
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DMA_INTERRUPT_SHIFT 3 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DMA_INTERRUPT_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DMA_INTERRUPT_BITWIDTH 1
// Buffer_Write_Ready bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BUFFER_WRITE_READY_MASK 0x10
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BUFFER_WRITE_READY_SHIFT 4 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BUFFER_WRITE_READY_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BUFFER_WRITE_READY_BITWIDTH 1
// Buffer_Read_Ready bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BUFFER_READ_READY_MASK 0x20
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BUFFER_READ_READY_SHIFT 5 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BUFFER_READ_READY_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BUFFER_READ_READY_BITWIDTH 1
// Card_Insertion bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_INSERTION_MASK 0x40
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_INSERTION_SHIFT 6 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_INSERTION_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_INSERTION_BITWIDTH 1
// Card_Removal bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_REMOVAL_MASK 0x80
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_REMOVAL_SHIFT 7 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_REMOVAL_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_REMOVAL_BITWIDTH 1
// Card_Interrupt bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_INTERRUPT_MASK 0x100
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_INTERRUPT_SHIFT 8 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_INTERRUPT_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CARD_INTERRUPT_BITWIDTH 1
// INT_A bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_A_MASK 0x200
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_A_SHIFT 9 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_A_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_A_BITWIDTH 1
// INT_B bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_B_MASK 0x400
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_B_SHIFT 10 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_B_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_B_BITWIDTH 1
// INT_C bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_C_MASK 0x800
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_C_SHIFT 11 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_C_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_INT_C_BITWIDTH 1
// Re_Tuning_Event bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_RE_TUNING_EVENT_MASK 0x1000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_RE_TUNING_EVENT_SHIFT 12 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_RE_TUNING_EVENT_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_RE_TUNING_EVENT_BITWIDTH 1
// Boot_ack_rcv bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BOOT_ACK_RCV_MASK 0x2000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BOOT_ACK_RCV_SHIFT 13 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BOOT_ACK_RCV_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BOOT_ACK_RCV_BITWIDTH 1
// Boot_terminate_Interrupt bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BOOT_TERMINATE_INTERRUPT_MASK 0x4000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BOOT_TERMINATE_INTERRUPT_SHIFT 14 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BOOT_TERMINATE_INTERRUPT_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_BOOT_TERMINATE_INTERRUPT_BITWIDTH 1
// Error_Interrupt bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_ERROR_INTERRUPT_MASK 0x8000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_ERROR_INTERRUPT_SHIFT 15 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_ERROR_INTERRUPT_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_ERROR_INTERRUPT_BITWIDTH 1
// Command_Timeout_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_TIMEOUT_ERROR_MASK 0x10000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_TIMEOUT_ERROR_SHIFT 16 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_TIMEOUT_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_TIMEOUT_ERROR_BITWIDTH 1
// Command_CRC_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_CRC_ERROR_MASK 0x20000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_CRC_ERROR_SHIFT 17 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_CRC_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_CRC_ERROR_BITWIDTH 1
// Command_End_Bit_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_END_BIT_ERROR_MASK 0x40000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_END_BIT_ERROR_SHIFT 18 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_END_BIT_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_END_BIT_ERROR_BITWIDTH 1
// Command_Index_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_INDEX_ERROR_MASK 0x80000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_INDEX_ERROR_SHIFT 19 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_INDEX_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_COMMAND_INDEX_ERROR_BITWIDTH 1
// Data_Timeout_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_TIMEOUT_ERROR_MASK 0x100000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_TIMEOUT_ERROR_SHIFT 20 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_TIMEOUT_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_TIMEOUT_ERROR_BITWIDTH 1
// Data_CRC_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_CRC_ERROR_MASK 0x200000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_CRC_ERROR_SHIFT 21 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_CRC_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_CRC_ERROR_BITWIDTH 1
// Data_End_Bit_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_END_BIT_ERROR_MASK 0x400000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_END_BIT_ERROR_SHIFT 22 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_END_BIT_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_DATA_END_BIT_ERROR_BITWIDTH 1
// Current_Limit_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CURRENT_LIMIT_ERROR_MASK 0x800000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CURRENT_LIMIT_ERROR_SHIFT 23 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CURRENT_LIMIT_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_CURRENT_LIMIT_ERROR_BITWIDTH 1
// Auto_CMD_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_AUTO_CMD_ERROR_MASK 0x1000000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_AUTO_CMD_ERROR_SHIFT 24 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_AUTO_CMD_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_AUTO_CMD_ERROR_BITWIDTH 1
// ADMA_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_ADMA_ERROR_MASK 0x2000000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_ADMA_ERROR_SHIFT 25 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_ADMA_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_ADMA_ERROR_BITWIDTH 1
// Tuning_Error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TUNING_ERROR_MASK 0x4000000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TUNING_ERROR_SHIFT 26 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TUNING_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TUNING_ERROR_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_RESERVED_MASK 0x8000000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_RESERVED_SHIFT 27 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_RESERVED_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_RESERVED_BITWIDTH 1
// Target_Response_error bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TARGET_RESPONSE_ERROR_MASK 0x10000000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TARGET_RESPONSE_ERROR_SHIFT 28 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TARGET_RESPONSE_ERROR_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_TARGET_RESPONSE_ERROR_BITWIDTH 1
// Vendor_Specific_Error_Status bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_VENDOR_SPECIFIC_ERROR_STATUS_MASK 0xE0000000
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_VENDOR_SPECIFIC_ERROR_STATUS_SHIFT 29 
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_VENDOR_SPECIFIC_ERROR_STATUS_BIT 0x7
#define EMMCA_ERROR_INTERRUPT_STATUS_NORMAL_INTERRUPT_STATUS_VENDOR_SPECIFIC_ERROR_STATUS_BITWIDTH 3
// Error_Interrupt_Status_Enable_Normal_Interrupt_Status_Enable Register
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_OFS 0x00000034
// Command_Complete_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_COMPLETE_STATUS_ENABLE_MASK 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_COMPLETE_STATUS_ENABLE_SHIFT 0 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_COMPLETE_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_COMPLETE_STATUS_ENABLE_BITWIDTH 1
// Transfer_Complete_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TRANSFER_COMPLETE_STATUS_ENABLE_MASK 0x2
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TRANSFER_COMPLETE_STATUS_ENABLE_SHIFT 1 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TRANSFER_COMPLETE_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TRANSFER_COMPLETE_STATUS_ENABLE_BITWIDTH 1
// Block_Gap_Event_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BLOCK_GAP_EVENT_STATUS_ENABLE_MASK 0x4
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BLOCK_GAP_EVENT_STATUS_ENABLE_SHIFT 2 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BLOCK_GAP_EVENT_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BLOCK_GAP_EVENT_STATUS_ENABLE_BITWIDTH 1
// DMA_Interrupt_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DMA_INTERRUPT_STATUS_ENABLE_MASK 0x8
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DMA_INTERRUPT_STATUS_ENABLE_SHIFT 3 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DMA_INTERRUPT_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DMA_INTERRUPT_STATUS_ENABLE_BITWIDTH 1
// Buffer_Write_Ready_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BUFFER_WRITE_READY_STATUS_ENABLE_MASK 0x10
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BUFFER_WRITE_READY_STATUS_ENABLE_SHIFT 4 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BUFFER_WRITE_READY_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BUFFER_WRITE_READY_STATUS_ENABLE_BITWIDTH 1
// Buffer_Read_Ready_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BUFFER_READ_READY_STATUS_ENABLE_MASK 0x20
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BUFFER_READ_READY_STATUS_ENABLE_SHIFT 5 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BUFFER_READ_READY_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BUFFER_READ_READY_STATUS_ENABLE_BITWIDTH 1
// Card_Insertion_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_INSERTION_STATUS_ENABLE_MASK 0x40
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_INSERTION_STATUS_ENABLE_SHIFT 6 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_INSERTION_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_INSERTION_STATUS_ENABLE_BITWIDTH 1
// Card_Removal_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_REMOVAL_STATUS_ENABLE_MASK 0x80
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_REMOVAL_STATUS_ENABLE_SHIFT 7 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_REMOVAL_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_REMOVAL_STATUS_ENABLE_BITWIDTH 1
// Card_Interrupt_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_INTERRUPT_STATUS_ENABLE_MASK 0x100
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_INTERRUPT_STATUS_ENABLE_SHIFT 8 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_INTERRUPT_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CARD_INTERRUPT_STATUS_ENABLE_BITWIDTH 1
// INT_A_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_A_STATUS_ENABLE_MASK 0x200
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_A_STATUS_ENABLE_SHIFT 9 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_A_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_A_STATUS_ENABLE_BITWIDTH 1
// INT_B_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_B_STATUS_ENABLE_MASK 0x400
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_B_STATUS_ENABLE_SHIFT 10 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_B_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_B_STATUS_ENABLE_BITWIDTH 1
// INT_C_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_C_STATUS_ENABLE_MASK 0x800
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_C_STATUS_ENABLE_SHIFT 11 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_C_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_INT_C_STATUS_ENABLE_BITWIDTH 1
// Re_Tuning_Event_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_RE_TUNING_EVENT_STATUS_ENABLE_MASK 0x1000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_RE_TUNING_EVENT_STATUS_ENABLE_SHIFT 12 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_RE_TUNING_EVENT_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_RE_TUNING_EVENT_STATUS_ENABLE_BITWIDTH 1
// Boot_ack_rcv_enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BOOT_ACK_RCV_ENABLE_MASK 0x2000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BOOT_ACK_RCV_ENABLE_SHIFT 13 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BOOT_ACK_RCV_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BOOT_ACK_RCV_ENABLE_BITWIDTH 1
// Boot_terminate_Interrupt_enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BOOT_TERMINATE_INTERRUPT_ENABLE_MASK 0x4000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BOOT_TERMINATE_INTERRUPT_ENABLE_SHIFT 14 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BOOT_TERMINATE_INTERRUPT_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_BOOT_TERMINATE_INTERRUPT_ENABLE_BITWIDTH 1
// Fixed_to_0 bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_FIXED_TO_0_MASK 0x8000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_FIXED_TO_0_SHIFT 15 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_FIXED_TO_0_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_FIXED_TO_0_BITWIDTH 1
// Command_Timeout_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_TIMEOUT_ERROR_STATUS_ENABLE_MASK 0x10000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_TIMEOUT_ERROR_STATUS_ENABLE_SHIFT 16 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_TIMEOUT_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_TIMEOUT_ERROR_STATUS_ENABLE_BITWIDTH 1
// Command_CRC_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_CRC_ERROR_STATUS_ENABLE_MASK 0x20000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_CRC_ERROR_STATUS_ENABLE_SHIFT 17 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_CRC_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_CRC_ERROR_STATUS_ENABLE_BITWIDTH 1
// Command_End_Bit_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_END_BIT_ERROR_STATUS_ENABLE_MASK 0x40000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_END_BIT_ERROR_STATUS_ENABLE_SHIFT 18 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_END_BIT_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_END_BIT_ERROR_STATUS_ENABLE_BITWIDTH 1
// Command_Index_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_INDEX_ERROR_STATUS_ENABLE_MASK 0x80000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_INDEX_ERROR_STATUS_ENABLE_SHIFT 19 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_INDEX_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_COMMAND_INDEX_ERROR_STATUS_ENABLE_BITWIDTH 1
// Data_Timeout_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_TIMEOUT_ERROR_STATUS_ENABLE_MASK 0x100000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_TIMEOUT_ERROR_STATUS_ENABLE_SHIFT 20 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_TIMEOUT_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_TIMEOUT_ERROR_STATUS_ENABLE_BITWIDTH 1
// Data_CRC_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_CRC_ERROR_STATUS_ENABLE_MASK 0x200000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_CRC_ERROR_STATUS_ENABLE_SHIFT 21 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_CRC_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_CRC_ERROR_STATUS_ENABLE_BITWIDTH 1
// Data_End_Bit_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_END_BIT_ERROR_STATUS_ENABLE_MASK 0x400000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_END_BIT_ERROR_STATUS_ENABLE_SHIFT 22 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_END_BIT_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_DATA_END_BIT_ERROR_STATUS_ENABLE_BITWIDTH 1
// Current_Limit_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CURRENT_LIMIT_ERROR_STATUS_ENABLE_MASK 0x800000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CURRENT_LIMIT_ERROR_STATUS_ENABLE_SHIFT 23 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CURRENT_LIMIT_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_CURRENT_LIMIT_ERROR_STATUS_ENABLE_BITWIDTH 1
// Auto_CMD12_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_AUTO_CMD12_ERROR_STATUS_ENABLE_MASK 0x1000000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_AUTO_CMD12_ERROR_STATUS_ENABLE_SHIFT 24 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_AUTO_CMD12_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_AUTO_CMD12_ERROR_STATUS_ENABLE_BITWIDTH 1
// ADMA_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_ADMA_ERROR_STATUS_ENABLE_MASK 0x2000000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_ADMA_ERROR_STATUS_ENABLE_SHIFT 25 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_ADMA_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_ADMA_ERROR_STATUS_ENABLE_BITWIDTH 1
// tuning_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TUNING_ERROR_STATUS_ENABLE_MASK 0x4000000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TUNING_ERROR_STATUS_ENABLE_SHIFT 26 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TUNING_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TUNING_ERROR_STATUS_ENABLE_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_RESERVED_MASK 0x8000000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_RESERVED_SHIFT 27 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_RESERVED_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_RESERVED_BITWIDTH 1
// Target_Response_Error_Status_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TARGET_RESPONSE_ERROR_STATUS_ENABLE_MASK 0x10000000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TARGET_RESPONSE_ERROR_STATUS_ENABLE_SHIFT 28 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TARGET_RESPONSE_ERROR_STATUS_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_TARGET_RESPONSE_ERROR_STATUS_ENABLE_BITWIDTH 1
// Vendor_Specific_Error_Status_Enable bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_VENDOR_SPECIFIC_ERROR_STATUS_ENABLE_MASK 0xE0000000
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_VENDOR_SPECIFIC_ERROR_STATUS_ENABLE_SHIFT 29 
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_VENDOR_SPECIFIC_ERROR_STATUS_ENABLE_BIT 0x7
#define EMMCA_ERROR_INTERRUPT_STATUS_ENABLE_NORMAL_INTERRUPT_STATUS_ENABLE_VENDOR_SPECIFIC_ERROR_STATUS_ENABLE_BITWIDTH 3
// Error_Interrupt_Signal_Enable_Normal_Interrupt_Signal_Enable Register
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_OFS 0x00000038
// Command_Complete_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_COMPLETE_SIGNAL_ENABLE_MASK 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_COMPLETE_SIGNAL_ENABLE_SHIFT 0 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_COMPLETE_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_COMPLETE_SIGNAL_ENABLE_BITWIDTH 1
// Transfer_Complete_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TRANSFER_COMPLETE_SIGNAL_ENABLE_MASK 0x2
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TRANSFER_COMPLETE_SIGNAL_ENABLE_SHIFT 1 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TRANSFER_COMPLETE_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TRANSFER_COMPLETE_SIGNAL_ENABLE_BITWIDTH 1
// Block_Gap_Event_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BLOCK_GAP_EVENT_SIGNAL_ENABLE_MASK 0x4
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BLOCK_GAP_EVENT_SIGNAL_ENABLE_SHIFT 2 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BLOCK_GAP_EVENT_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BLOCK_GAP_EVENT_SIGNAL_ENABLE_BITWIDTH 1
// DMA_Interrupt_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DMA_INTERRUPT_SIGNAL_ENABLE_MASK 0x8
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DMA_INTERRUPT_SIGNAL_ENABLE_SHIFT 3 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DMA_INTERRUPT_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DMA_INTERRUPT_SIGNAL_ENABLE_BITWIDTH 1
// Buffer_Write_Ready_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BUFFER_WRITE_READY_SIGNAL_ENABLE_MASK 0x10
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BUFFER_WRITE_READY_SIGNAL_ENABLE_SHIFT 4 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BUFFER_WRITE_READY_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BUFFER_WRITE_READY_SIGNAL_ENABLE_BITWIDTH 1
// Buffer_Read_Ready_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BUFFER_READ_READY_SIGNAL_ENABLE_MASK 0x20
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BUFFER_READ_READY_SIGNAL_ENABLE_SHIFT 5 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BUFFER_READ_READY_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BUFFER_READ_READY_SIGNAL_ENABLE_BITWIDTH 1
// Card_Insertion_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_INSERTION_SIGNAL_ENABLE_MASK 0x40
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_INSERTION_SIGNAL_ENABLE_SHIFT 6 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_INSERTION_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_INSERTION_SIGNAL_ENABLE_BITWIDTH 1
// Card_Removal_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_REMOVAL_SIGNAL_ENABLE_MASK 0x80
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_REMOVAL_SIGNAL_ENABLE_SHIFT 7 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_REMOVAL_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_REMOVAL_SIGNAL_ENABLE_BITWIDTH 1
// Card_Interrupt_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_INTERRUPT_SIGNAL_ENABLE_MASK 0x100
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_INTERRUPT_SIGNAL_ENABLE_SHIFT 8 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_INTERRUPT_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CARD_INTERRUPT_SIGNAL_ENABLE_BITWIDTH 1
// INT_A_signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_A_SIGNAL_ENABLE_MASK 0x200
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_A_SIGNAL_ENABLE_SHIFT 9 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_A_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_A_SIGNAL_ENABLE_BITWIDTH 1
// INT_B_signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_B_SIGNAL_ENABLE_MASK 0x400
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_B_SIGNAL_ENABLE_SHIFT 10 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_B_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_B_SIGNAL_ENABLE_BITWIDTH 1
// INT_C_signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_C_SIGNAL_ENABLE_MASK 0x800
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_C_SIGNAL_ENABLE_SHIFT 11 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_C_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_INT_C_SIGNAL_ENABLE_BITWIDTH 1
// Re_Tuning_Event_signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_RE_TUNING_EVENT_SIGNAL_ENABLE_MASK 0x1000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_RE_TUNING_EVENT_SIGNAL_ENABLE_SHIFT 12 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_RE_TUNING_EVENT_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_RE_TUNING_EVENT_SIGNAL_ENABLE_BITWIDTH 1
// Boot_ack_rcv_signal_enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BOOT_ACK_RCV_SIGNAL_ENABLE_MASK 0x2000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BOOT_ACK_RCV_SIGNAL_ENABLE_SHIFT 13 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BOOT_ACK_RCV_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BOOT_ACK_RCV_SIGNAL_ENABLE_BITWIDTH 1
// Boot_terminate_Interrupt_signal_enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BOOT_TERMINATE_INTERRUPT_SIGNAL_ENABLE_MASK 0x4000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BOOT_TERMINATE_INTERRUPT_SIGNAL_ENABLE_SHIFT 14 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BOOT_TERMINATE_INTERRUPT_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_BOOT_TERMINATE_INTERRUPT_SIGNAL_ENABLE_BITWIDTH 1
// Fixed_to_0 bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_FIXED_TO_0_MASK 0x8000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_FIXED_TO_0_SHIFT 15 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_FIXED_TO_0_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_FIXED_TO_0_BITWIDTH 1
// Command_Timeout_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_TIMEOUT_ERROR_SIGNAL_ENABLE_MASK 0x10000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_TIMEOUT_ERROR_SIGNAL_ENABLE_SHIFT 16 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_TIMEOUT_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_TIMEOUT_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Command_CRC_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_CRC_ERROR_SIGNAL_ENABLE_MASK 0x20000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_CRC_ERROR_SIGNAL_ENABLE_SHIFT 17 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_CRC_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_CRC_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Command_End_Bit_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_END_BIT_ERROR_SIGNAL_ENABLE_MASK 0x40000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_END_BIT_ERROR_SIGNAL_ENABLE_SHIFT 18 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_END_BIT_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_END_BIT_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Command_Index_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_INDEX_ERROR_SIGNAL_ENABLE_MASK 0x80000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_INDEX_ERROR_SIGNAL_ENABLE_SHIFT 19 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_INDEX_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_COMMAND_INDEX_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Data_Timeout_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_TIMEOUT_ERROR_SIGNAL_ENABLE_MASK 0x100000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_TIMEOUT_ERROR_SIGNAL_ENABLE_SHIFT 20 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_TIMEOUT_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_TIMEOUT_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Data_CRC_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_CRC_ERROR_SIGNAL_ENABLE_MASK 0x200000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_CRC_ERROR_SIGNAL_ENABLE_SHIFT 21 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_CRC_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_CRC_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Data_End_Bit_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_END_BIT_ERROR_SIGNAL_ENABLE_MASK 0x400000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_END_BIT_ERROR_SIGNAL_ENABLE_SHIFT 22 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_END_BIT_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_DATA_END_BIT_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Current_Limit_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CURRENT_LIMIT_ERROR_SIGNAL_ENABLE_MASK 0x800000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CURRENT_LIMIT_ERROR_SIGNAL_ENABLE_SHIFT 23 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CURRENT_LIMIT_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_CURRENT_LIMIT_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Auto_CMD12_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_AUTO_CMD12_ERROR_SIGNAL_ENABLE_MASK 0x1000000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_AUTO_CMD12_ERROR_SIGNAL_ENABLE_SHIFT 24 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_AUTO_CMD12_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_AUTO_CMD12_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// ADMA_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_ADMA_ERROR_SIGNAL_ENABLE_MASK 0x2000000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_ADMA_ERROR_SIGNAL_ENABLE_SHIFT 25 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_ADMA_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_ADMA_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Tuning_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TUNING_ERROR_SIGNAL_ENABLE_MASK 0x4000000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TUNING_ERROR_SIGNAL_ENABLE_SHIFT 26 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TUNING_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TUNING_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_RESERVED_MASK 0x8000000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_RESERVED_SHIFT 27 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_RESERVED_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_RESERVED_BITWIDTH 1
// Target_Response_Error_Signal_Enable bitfiled (RW) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TARGET_RESPONSE_ERROR_SIGNAL_ENABLE_MASK 0x10000000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TARGET_RESPONSE_ERROR_SIGNAL_ENABLE_SHIFT 28 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TARGET_RESPONSE_ERROR_SIGNAL_ENABLE_BIT 0x1
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_TARGET_RESPONSE_ERROR_SIGNAL_ENABLE_BITWIDTH 1
// Vendor_Specific_Error_Signal_Enable bitfiled (RO) Reset=0
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_VENDOR_SPECIFIC_ERROR_SIGNAL_ENABLE_MASK 0xE0000000
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_VENDOR_SPECIFIC_ERROR_SIGNAL_ENABLE_SHIFT 29 
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_VENDOR_SPECIFIC_ERROR_SIGNAL_ENABLE_BIT 0x7
#define EMMCA_ERROR_INTERRUPT_SIGNAL_ENABLE_NORMAL_INTERRUPT_SIGNAL_ENABLE_VENDOR_SPECIFIC_ERROR_SIGNAL_ENABLE_BITWIDTH 3
// Host_Control_2_Auto_CMD_Error_Status Register
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_OFS 0x0000003C
// Auto_CMD12_not_Executed bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD12_NOT_EXECUTED_MASK 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD12_NOT_EXECUTED_SHIFT 0 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD12_NOT_EXECUTED_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD12_NOT_EXECUTED_BITWIDTH 1
// Auto_CMD_Timeout_Error bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_TIMEOUT_ERROR_MASK 0x2
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_TIMEOUT_ERROR_SHIFT 1 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_TIMEOUT_ERROR_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_TIMEOUT_ERROR_BITWIDTH 1
// Auto_CMD_CRC_Error bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_CRC_ERROR_MASK 0x4
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_CRC_ERROR_SHIFT 2 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_CRC_ERROR_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_CRC_ERROR_BITWIDTH 1
// Auto_CMD_End_Bit_Error bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_END_BIT_ERROR_MASK 0x8
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_END_BIT_ERROR_SHIFT 3 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_END_BIT_ERROR_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_END_BIT_ERROR_BITWIDTH 1
// Auto_CMD_Index_Error bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_INDEX_ERROR_MASK 0x10
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_INDEX_ERROR_SHIFT 4 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_INDEX_ERROR_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_AUTO_CMD_INDEX_ERROR_BITWIDTH 1
// Reserved3 bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED3_MASK 0x60
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED3_SHIFT 5 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED3_BIT 0x3
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED3_BITWIDTH 2
// Command_Not_Issued_By_Auto_CMD12_Error bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_COMMAND_NOT_ISSUED_BY_AUTO_CMD12_ERROR_MASK 0x80
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_COMMAND_NOT_ISSUED_BY_AUTO_CMD12_ERROR_SHIFT 7 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_COMMAND_NOT_ISSUED_BY_AUTO_CMD12_ERROR_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_COMMAND_NOT_ISSUED_BY_AUTO_CMD12_ERROR_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED2_MASK 0xFF00
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED2_SHIFT 8 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED2_BIT 0xFF
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED2_BITWIDTH 8
// UHS_Mode_Select bitfiled (RW) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_UHS_MODE_SELECT_MASK 0x70000
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_UHS_MODE_SELECT_SHIFT 16 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_UHS_MODE_SELECT_BIT 0x7
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_UHS_MODE_SELECT_BITWIDTH 3
// Enable_1p8V_Signaling bitfiled (RW) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_ENABLE_1P8V_SIGNALING_MASK 0x80000
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_ENABLE_1P8V_SIGNALING_SHIFT 19 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_ENABLE_1P8V_SIGNALING_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_ENABLE_1P8V_SIGNALING_BITWIDTH 1
// Driver_Strength_Select bitfiled (RW) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_DRIVER_STRENGTH_SELECT_MASK 0x300000
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_DRIVER_STRENGTH_SELECT_SHIFT 20 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_DRIVER_STRENGTH_SELECT_BIT 0x3
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_DRIVER_STRENGTH_SELECT_BITWIDTH 2
// Execute_Tuning bitfiled (RW) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_EXECUTE_TUNING_MASK 0x400000
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_EXECUTE_TUNING_SHIFT 22 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_EXECUTE_TUNING_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_EXECUTE_TUNING_BITWIDTH 1
// Sampling_Clock_Select bitfiled (RW) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_SAMPLING_CLOCK_SELECT_MASK 0x800000
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_SAMPLING_CLOCK_SELECT_SHIFT 23 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_SAMPLING_CLOCK_SELECT_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_SAMPLING_CLOCK_SELECT_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED_MASK 0x3F000000
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED_SHIFT 24 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED_BIT 0x3F
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_RESERVED_BITWIDTH 6
// Asynchronous_Interrupt_Enable bitfiled (RW) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_ASYNCHRONOUS_INTERRUPT_ENABLE_MASK 0x40000000
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_ASYNCHRONOUS_INTERRUPT_ENABLE_SHIFT 30 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_ASYNCHRONOUS_INTERRUPT_ENABLE_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_ASYNCHRONOUS_INTERRUPT_ENABLE_BITWIDTH 1
// Preset_Value_Enable bitfiled (RW) Reset=0
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_PRESET_VALUE_ENABLE_MASK 0x80000000
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_PRESET_VALUE_ENABLE_SHIFT 31 
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_PRESET_VALUE_ENABLE_BIT 0x1
#define EMMCA_HOST_CONTROL_2_AUTO_CMD_ERROR_STATUS_PRESET_VALUE_ENABLE_BITWIDTH 1
// Capabilities_0 Register
#define EMMCA_CAPABILITIES_0_OFS                 0x00000040
// Timeout_Clock_Frequency bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_TIMEOUT_CLOCK_FREQUENCY_MASK 0x3F
#define EMMCA_CAPABILITIES_0_TIMEOUT_CLOCK_FREQUENCY_SHIFT 0 
#define EMMCA_CAPABILITIES_0_TIMEOUT_CLOCK_FREQUENCY_BIT 0x3F
#define EMMCA_CAPABILITIES_0_TIMEOUT_CLOCK_FREQUENCY_BITWIDTH 6
// Reserved3 bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_RESERVED3_MASK      0x40
#define EMMCA_CAPABILITIES_0_RESERVED3_SHIFT     6 
#define EMMCA_CAPABILITIES_0_RESERVED3_BIT       0x1
#define EMMCA_CAPABILITIES_0_RESERVED3_BITWIDTH  1
// Timeout_Clock_Unit bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_TIMEOUT_CLOCK_UNIT_MASK 0x80
#define EMMCA_CAPABILITIES_0_TIMEOUT_CLOCK_UNIT_SHIFT 7 
#define EMMCA_CAPABILITIES_0_TIMEOUT_CLOCK_UNIT_BIT 0x1
#define EMMCA_CAPABILITIES_0_TIMEOUT_CLOCK_UNIT_BITWIDTH 1
// Base_Clock_Frequency_for_SD_Clock bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_BASE_CLOCK_FREQUENCY_FOR_SD_CLOCK_MASK 0xFF00
#define EMMCA_CAPABILITIES_0_BASE_CLOCK_FREQUENCY_FOR_SD_CLOCK_SHIFT 8 
#define EMMCA_CAPABILITIES_0_BASE_CLOCK_FREQUENCY_FOR_SD_CLOCK_BIT 0xFF
#define EMMCA_CAPABILITIES_0_BASE_CLOCK_FREQUENCY_FOR_SD_CLOCK_BITWIDTH 8
// Max_Block_Length bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_MAX_BLOCK_LENGTH_MASK 0x30000
#define EMMCA_CAPABILITIES_0_MAX_BLOCK_LENGTH_SHIFT 16 
#define EMMCA_CAPABILITIES_0_MAX_BLOCK_LENGTH_BIT 0x3
#define EMMCA_CAPABILITIES_0_MAX_BLOCK_LENGTH_BITWIDTH 2
// Extended_Media_Bus_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_EXTENDED_MEDIA_BUS_SUPPORT_MASK 0x40000
#define EMMCA_CAPABILITIES_0_EXTENDED_MEDIA_BUS_SUPPORT_SHIFT 18 
#define EMMCA_CAPABILITIES_0_EXTENDED_MEDIA_BUS_SUPPORT_BIT 0x1
#define EMMCA_CAPABILITIES_0_EXTENDED_MEDIA_BUS_SUPPORT_BITWIDTH 1
// ADMA2_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_ADMA2_SUPPORT_MASK  0x80000
#define EMMCA_CAPABILITIES_0_ADMA2_SUPPORT_SHIFT 19 
#define EMMCA_CAPABILITIES_0_ADMA2_SUPPORT_BIT   0x1
#define EMMCA_CAPABILITIES_0_ADMA2_SUPPORT_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_RESERVED2_MASK      0x100000
#define EMMCA_CAPABILITIES_0_RESERVED2_SHIFT     20 
#define EMMCA_CAPABILITIES_0_RESERVED2_BIT       0x1
#define EMMCA_CAPABILITIES_0_RESERVED2_BITWIDTH  1
// High_Speed_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_HIGH_SPEED_SUPPORT_MASK 0x200000
#define EMMCA_CAPABILITIES_0_HIGH_SPEED_SUPPORT_SHIFT 21 
#define EMMCA_CAPABILITIES_0_HIGH_SPEED_SUPPORT_BIT 0x1
#define EMMCA_CAPABILITIES_0_HIGH_SPEED_SUPPORT_BITWIDTH 1
// SDMA_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_SDMA_SUPPORT_MASK   0x400000
#define EMMCA_CAPABILITIES_0_SDMA_SUPPORT_SHIFT  22 
#define EMMCA_CAPABILITIES_0_SDMA_SUPPORT_BIT    0x1
#define EMMCA_CAPABILITIES_0_SDMA_SUPPORT_BITWIDTH 1
// Suspend_Resume_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_SUSPEND_RESUME_SUPPORT_MASK 0x800000
#define EMMCA_CAPABILITIES_0_SUSPEND_RESUME_SUPPORT_SHIFT 23 
#define EMMCA_CAPABILITIES_0_SUSPEND_RESUME_SUPPORT_BIT 0x1
#define EMMCA_CAPABILITIES_0_SUSPEND_RESUME_SUPPORT_BITWIDTH 1
// Voltage_Support_3p3V bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_3P3V_MASK 0x1000000
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_3P3V_SHIFT 24 
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_3P3V_BIT 0x1
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_3P3V_BITWIDTH 1
// Voltage_Support_3p0V bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_3P0V_MASK 0x2000000
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_3P0V_SHIFT 25 
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_3P0V_BIT 0x1
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_3P0V_BITWIDTH 1
// Voltage_Support_1p8V bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_1P8V_MASK 0x4000000
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_1P8V_SHIFT 26 
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_1P8V_BIT 0x1
#define EMMCA_CAPABILITIES_0_VOLTAGE_SUPPORT_1P8V_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_RESERVED_MASK       0x8000000
#define EMMCA_CAPABILITIES_0_RESERVED_SHIFT      27 
#define EMMCA_CAPABILITIES_0_RESERVED_BIT        0x1
#define EMMCA_CAPABILITIES_0_RESERVED_BITWIDTH   1
// Support_64bit_System_Bus bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_SUPPORT_64BIT_SYSTEM_BUS_MASK 0x10000000
#define EMMCA_CAPABILITIES_0_SUPPORT_64BIT_SYSTEM_BUS_SHIFT 28 
#define EMMCA_CAPABILITIES_0_SUPPORT_64BIT_SYSTEM_BUS_BIT 0x1
#define EMMCA_CAPABILITIES_0_SUPPORT_64BIT_SYSTEM_BUS_BITWIDTH 1
// Asynchronous_Interrupt_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_ASYNCHRONOUS_INTERRUPT_SUPPORT_MASK 0x20000000
#define EMMCA_CAPABILITIES_0_ASYNCHRONOUS_INTERRUPT_SUPPORT_SHIFT 29 
#define EMMCA_CAPABILITIES_0_ASYNCHRONOUS_INTERRUPT_SUPPORT_BIT 0x1
#define EMMCA_CAPABILITIES_0_ASYNCHRONOUS_INTERRUPT_SUPPORT_BITWIDTH 1
// Slot_Type bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_0_SLOT_TYPE_MASK      0xC0000000
#define EMMCA_CAPABILITIES_0_SLOT_TYPE_SHIFT     30 
#define EMMCA_CAPABILITIES_0_SLOT_TYPE_BIT       0x3
#define EMMCA_CAPABILITIES_0_SLOT_TYPE_BITWIDTH  2
// Capabilities_1 Register
#define EMMCA_CAPABILITIES_1_OFS                 0x00000044
// SDR50_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_SDR50_SUPPORT_MASK  0x1
#define EMMCA_CAPABILITIES_1_SDR50_SUPPORT_SHIFT 0 
#define EMMCA_CAPABILITIES_1_SDR50_SUPPORT_BIT   0x1
#define EMMCA_CAPABILITIES_1_SDR50_SUPPORT_BITWIDTH 1
// SDR104_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_SDR104_SUPPORT_MASK 0x2
#define EMMCA_CAPABILITIES_1_SDR104_SUPPORT_SHIFT 1 
#define EMMCA_CAPABILITIES_1_SDR104_SUPPORT_BIT  0x1
#define EMMCA_CAPABILITIES_1_SDR104_SUPPORT_BITWIDTH 1
// DDR50_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_DDR50_SUPPORT_MASK  0x4
#define EMMCA_CAPABILITIES_1_DDR50_SUPPORT_SHIFT 2 
#define EMMCA_CAPABILITIES_1_DDR50_SUPPORT_BIT   0x1
#define EMMCA_CAPABILITIES_1_DDR50_SUPPORT_BITWIDTH 1
// Reserved4 bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_RESERVED4_MASK      0x8
#define EMMCA_CAPABILITIES_1_RESERVED4_SHIFT     3 
#define EMMCA_CAPABILITIES_1_RESERVED4_BIT       0x1
#define EMMCA_CAPABILITIES_1_RESERVED4_BITWIDTH  1
// Driver_Type_A_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_A_SUPPORT_MASK 0x10
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_A_SUPPORT_SHIFT 4 
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_A_SUPPORT_BIT 0x1
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_A_SUPPORT_BITWIDTH 1
// Driver_Type_C_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_C_SUPPORT_MASK 0x20
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_C_SUPPORT_SHIFT 5 
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_C_SUPPORT_BIT 0x1
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_C_SUPPORT_BITWIDTH 1
// Driver_Type_D_Support bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_D_SUPPORT_MASK 0x40
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_D_SUPPORT_SHIFT 6 
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_D_SUPPORT_BIT 0x1
#define EMMCA_CAPABILITIES_1_DRIVER_TYPE_D_SUPPORT_BITWIDTH 1
// Reserved3 bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_RESERVED3_MASK      0x80
#define EMMCA_CAPABILITIES_1_RESERVED3_SHIFT     7 
#define EMMCA_CAPABILITIES_1_RESERVED3_BIT       0x1
#define EMMCA_CAPABILITIES_1_RESERVED3_BITWIDTH  1
// Timer_count_for_Re_Tuning bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_TIMER_COUNT_FOR_RE_TUNING_MASK 0xF00
#define EMMCA_CAPABILITIES_1_TIMER_COUNT_FOR_RE_TUNING_SHIFT 8 
#define EMMCA_CAPABILITIES_1_TIMER_COUNT_FOR_RE_TUNING_BIT 0xF
#define EMMCA_CAPABILITIES_1_TIMER_COUNT_FOR_RE_TUNING_BITWIDTH 4
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_RESERVED2_MASK      0x1000
#define EMMCA_CAPABILITIES_1_RESERVED2_SHIFT     12 
#define EMMCA_CAPABILITIES_1_RESERVED2_BIT       0x1
#define EMMCA_CAPABILITIES_1_RESERVED2_BITWIDTH  1
// Use_Tuning_for_SDR50 bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_USE_TUNING_FOR_SDR50_MASK 0x2000
#define EMMCA_CAPABILITIES_1_USE_TUNING_FOR_SDR50_SHIFT 13 
#define EMMCA_CAPABILITIES_1_USE_TUNING_FOR_SDR50_BIT 0x1
#define EMMCA_CAPABILITIES_1_USE_TUNING_FOR_SDR50_BITWIDTH 1
// Re_tuning_modes bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_RE_TUNING_MODES_MASK 0xC000
#define EMMCA_CAPABILITIES_1_RE_TUNING_MODES_SHIFT 14 
#define EMMCA_CAPABILITIES_1_RE_TUNING_MODES_BIT 0x3
#define EMMCA_CAPABILITIES_1_RE_TUNING_MODES_BITWIDTH 2
// Clock_Multiplier bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_CLOCK_MULTIPLIER_MASK 0xFF0000
#define EMMCA_CAPABILITIES_1_CLOCK_MULTIPLIER_SHIFT 16 
#define EMMCA_CAPABILITIES_1_CLOCK_MULTIPLIER_BIT 0xFF
#define EMMCA_CAPABILITIES_1_CLOCK_MULTIPLIER_BITWIDTH 8
// SPI_mode bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_SPI_MODE_MASK       0x1000000
#define EMMCA_CAPABILITIES_1_SPI_MODE_SHIFT      24 
#define EMMCA_CAPABILITIES_1_SPI_MODE_BIT        0x1
#define EMMCA_CAPABILITIES_1_SPI_MODE_BITWIDTH   1
// SPI_block_mode bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_SPI_BLOCK_MODE_MASK 0x2000000
#define EMMCA_CAPABILITIES_1_SPI_BLOCK_MODE_SHIFT 25 
#define EMMCA_CAPABILITIES_1_SPI_BLOCK_MODE_BIT  0x1
#define EMMCA_CAPABILITIES_1_SPI_BLOCK_MODE_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_CAPABILITIES_1_RESERVED_MASK       0xFC000000
#define EMMCA_CAPABILITIES_1_RESERVED_SHIFT      26 
#define EMMCA_CAPABILITIES_1_RESERVED_BIT        0x3F
#define EMMCA_CAPABILITIES_1_RESERVED_BITWIDTH   6
// Maximum_Current_Capabilities Register
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_OFS   0x00000048
// Maximum_Current_for_3p3V bitfiled (RO) Reset=0
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_3P3V_MASK 0xFF
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_3P3V_SHIFT 0 
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_3P3V_BIT 0xFF
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_3P3V_BITWIDTH 8
// Maximum_Current_for_3p0V bitfiled (RO) Reset=0
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_3P0V_MASK 0xFF00
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_3P0V_SHIFT 8 
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_3P0V_BIT 0xFF
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_3P0V_BITWIDTH 8
// Maximum_Current_for_1p8V bitfiled (RO) Reset=0
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_1P8V_MASK 0xFF0000
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_1P8V_SHIFT 16 
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_1P8V_BIT 0xFF
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_MAXIMUM_CURRENT_FOR_1P8V_BITWIDTH 8
// Reserved bitfiled (RO) Reset=0
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_RESERVED_MASK 0xFF000000
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_RESERVED_SHIFT 24 
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_RESERVED_BIT 0xFF
#define EMMCA_MAXIMUM_CURRENT_CAPABILITIES_RESERVED_BITWIDTH 8
// Force_Event_for_Error_Interrupt_Status_Force_Event_for_Auto_CMD_Error_Status Register
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_OFS 0x00000050
// Force_Event_for_Auto_CMD12_NOT_Executed bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD12_NOT_EXECUTED_MASK 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD12_NOT_EXECUTED_SHIFT 0 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD12_NOT_EXECUTED_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD12_NOT_EXECUTED_BITWIDTH 1
// Force_Event_for_Auto_CMD_timeout_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_TIMEOUT_ERROR_MASK 0x2
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_TIMEOUT_ERROR_SHIFT 1 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_TIMEOUT_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_TIMEOUT_ERROR_BITWIDTH 1
// Force_Event_for_Auto_CMD_CRC_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_CRC_ERROR_MASK 0x4
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_CRC_ERROR_SHIFT 2 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_CRC_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_CRC_ERROR_BITWIDTH 1
// Force_Event_for_Auto_CMD_End_bit_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_END_BIT_ERROR_MASK 0x8
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_END_BIT_ERROR_SHIFT 3 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_END_BIT_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_END_BIT_ERROR_BITWIDTH 1
// Force_Event_for_Auto_CMD_Index_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_INDEX_ERROR_MASK 0x10
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_INDEX_ERROR_SHIFT 4 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_INDEX_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_INDEX_ERROR_BITWIDTH 1
// Reserved3 bitfiled (RO) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED3_MASK 0x60
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED3_SHIFT 5 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED3_BIT 0x3
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED3_BITWIDTH 2
// Force_Event_for_command_not_issued_by_Auto_CMD12_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_NOT_ISSUED_BY_AUTO_CMD12_ERROR_MASK 0x80
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_NOT_ISSUED_BY_AUTO_CMD12_ERROR_SHIFT 7 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_NOT_ISSUED_BY_AUTO_CMD12_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_NOT_ISSUED_BY_AUTO_CMD12_ERROR_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED2_MASK 0xFF00
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED2_SHIFT 8 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED2_BIT 0xFF
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED2_BITWIDTH 8
// Force_Event_for_Command_Timeout_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_TIMEOUT_ERROR_MASK 0x10000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_TIMEOUT_ERROR_SHIFT 16 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_TIMEOUT_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_TIMEOUT_ERROR_BITWIDTH 1
// Force_Event_for_Command_CRC_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_CRC_ERROR_MASK 0x20000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_CRC_ERROR_SHIFT 17 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_CRC_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_CRC_ERROR_BITWIDTH 1
// Force_Event_for_Command_End_Bit_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_END_BIT_ERROR_MASK 0x40000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_END_BIT_ERROR_SHIFT 18 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_END_BIT_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_END_BIT_ERROR_BITWIDTH 1
// Force_Event_for_Command_Index_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_INDEX_ERROR_MASK 0x80000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_INDEX_ERROR_SHIFT 19 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_INDEX_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_COMMAND_INDEX_ERROR_BITWIDTH 1
// Force_Event_for_Data_Timeout_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_TIMEOUT_ERROR_MASK 0x100000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_TIMEOUT_ERROR_SHIFT 20 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_TIMEOUT_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_TIMEOUT_ERROR_BITWIDTH 1
// Force_Event_for_Data_CRC_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_CRC_ERROR_MASK 0x200000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_CRC_ERROR_SHIFT 21 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_CRC_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_CRC_ERROR_BITWIDTH 1
// Force_Event_for_Data_End_Bit_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_END_BIT_ERROR_MASK 0x400000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_END_BIT_ERROR_SHIFT 22 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_END_BIT_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_DATA_END_BIT_ERROR_BITWIDTH 1
// Force_Event_for_Current_Limit_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_CURRENT_LIMIT_ERROR_MASK 0x800000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_CURRENT_LIMIT_ERROR_SHIFT 23 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_CURRENT_LIMIT_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_CURRENT_LIMIT_ERROR_BITWIDTH 1
// Force_Event_for_Auto_CMD_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_MASK 0x1000000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_SHIFT 24 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_BITWIDTH 1
// Force_Event_for_ADMA_Error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_ADMA_ERROR_MASK 0x2000000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_ADMA_ERROR_SHIFT 25 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_ADMA_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_ADMA_ERROR_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED_MASK 0xC000000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED_SHIFT 26 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED_BIT 0x3
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_RESERVED_BITWIDTH 2
// Force_event_for_Target_Response_error bitfiled (RW) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_TARGET_RESPONSE_ERROR_MASK 0x10000000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_TARGET_RESPONSE_ERROR_SHIFT 28 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_TARGET_RESPONSE_ERROR_BIT 0x1
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_TARGET_RESPONSE_ERROR_BITWIDTH 1
// Force_Event_for_Vendor_Specific_Error_Status bitfiled (RO) Reset=0
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_VENDOR_SPECIFIC_ERROR_STATUS_MASK 0xE0000000
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_VENDOR_SPECIFIC_ERROR_STATUS_SHIFT 29 
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_VENDOR_SPECIFIC_ERROR_STATUS_BIT 0x7
#define EMMCA_FORCE_EVENT_FOR_ERROR_INTERRUPT_STATUS_FORCE_EVENT_FOR_AUTO_CMD_ERROR_STATUS_FORCE_EVENT_FOR_VENDOR_SPECIFIC_ERROR_STATUS_BITWIDTH 3
// ADMA_Error_Status Register
#define EMMCA_ADMA_ERROR_STATUS_OFS              0x00000054
// ADMA_Error_State bitfiled (RO) Reset=0
#define EMMCA_ADMA_ERROR_STATUS_ADMA_ERROR_STATE_MASK 0x3
#define EMMCA_ADMA_ERROR_STATUS_ADMA_ERROR_STATE_SHIFT 0 
#define EMMCA_ADMA_ERROR_STATUS_ADMA_ERROR_STATE_BIT 0x3
#define EMMCA_ADMA_ERROR_STATUS_ADMA_ERROR_STATE_BITWIDTH 2
// ADMA_Length_Mismatch_Error bitfiled (RO) Reset=0
#define EMMCA_ADMA_ERROR_STATUS_ADMA_LENGTH_MISMATCH_ERROR_MASK 0x4
#define EMMCA_ADMA_ERROR_STATUS_ADMA_LENGTH_MISMATCH_ERROR_SHIFT 2 
#define EMMCA_ADMA_ERROR_STATUS_ADMA_LENGTH_MISMATCH_ERROR_BIT 0x1
#define EMMCA_ADMA_ERROR_STATUS_ADMA_LENGTH_MISMATCH_ERROR_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_ADMA_ERROR_STATUS_RESERVED_MASK    0xFFFFFFF8
#define EMMCA_ADMA_ERROR_STATUS_RESERVED_SHIFT   3 
#define EMMCA_ADMA_ERROR_STATUS_RESERVED_BIT     0x1FFFFFFF
#define EMMCA_ADMA_ERROR_STATUS_RESERVED_BITWIDTH 29
// ADMA_System_Address_0 Register
#define EMMCA_ADMA_SYSTEM_ADDRESS_0_OFS          0x00000058
// ADMA_System_Address_0 bitfiled (RW) Reset=0
#define EMMCA_ADMA_SYSTEM_ADDRESS_0_ADMA_SYSTEM_ADDRESS_0_MASK 0xFFFFFFFF
#define EMMCA_ADMA_SYSTEM_ADDRESS_0_ADMA_SYSTEM_ADDRESS_0_SHIFT 0 
#define EMMCA_ADMA_SYSTEM_ADDRESS_0_ADMA_SYSTEM_ADDRESS_0_BIT 0xFFFFFFFF
#define EMMCA_ADMA_SYSTEM_ADDRESS_0_ADMA_SYSTEM_ADDRESS_0_BITWIDTH 32
// ADMA_System_Address_1 Register
#define EMMCA_ADMA_SYSTEM_ADDRESS_1_OFS          0x0000005C
// ADMA_System_Address_1 bitfiled (RW) Reset=0
#define EMMCA_ADMA_SYSTEM_ADDRESS_1_ADMA_SYSTEM_ADDRESS_1_MASK 0xFFFFFFFF
#define EMMCA_ADMA_SYSTEM_ADDRESS_1_ADMA_SYSTEM_ADDRESS_1_SHIFT 0 
#define EMMCA_ADMA_SYSTEM_ADDRESS_1_ADMA_SYSTEM_ADDRESS_1_BIT 0xFFFFFFFF
#define EMMCA_ADMA_SYSTEM_ADDRESS_1_ADMA_SYSTEM_ADDRESS_1_BITWIDTH 32
// Preset_Value_for_Default_Speed_Initialization Register
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_OFS 0x00000060
// SDCLK_Frequency_Select_Value_for_Initialization bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_SDCLK_FREQUENCY_SELECT_VALUE_FOR_INITIALIZATION_MASK 0x3FF
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_SDCLK_FREQUENCY_SELECT_VALUE_FOR_INITIALIZATION_SHIFT 0 
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_SDCLK_FREQUENCY_SELECT_VALUE_FOR_INITIALIZATION_BIT 0x3FF
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_SDCLK_FREQUENCY_SELECT_VALUE_FOR_INITIALIZATION_BITWIDTH 10
// Clock_Generator_Select_Value_for_Initialization bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_CLOCK_GENERATOR_SELECT_VALUE_FOR_INITIALIZATION_MASK 0x400
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_CLOCK_GENERATOR_SELECT_VALUE_FOR_INITIALIZATION_SHIFT 10 
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_CLOCK_GENERATOR_SELECT_VALUE_FOR_INITIALIZATION_BIT 0x1
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_CLOCK_GENERATOR_SELECT_VALUE_FOR_INITIALIZATION_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_RESERVED2_MASK 0x3800
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_RESERVED2_SHIFT 11 
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_RESERVED2_BIT 0x7
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_RESERVED2_BITWIDTH 3
// Driver_Strength_Select_Value_for_Initialization bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_DRIVER_STRENGTH_SELECT_VALUE_FOR_INITIALIZATION_MASK 0xC000
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_DRIVER_STRENGTH_SELECT_VALUE_FOR_INITIALIZATION_SHIFT 14 
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_DRIVER_STRENGTH_SELECT_VALUE_FOR_INITIALIZATION_BIT 0x3
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_DRIVER_STRENGTH_SELECT_VALUE_FOR_INITIALIZATION_BITWIDTH 2
// SDCLK_Frequency_Select_Value_for_Default_Speed bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_SDCLK_FREQUENCY_SELECT_VALUE_FOR_DEFAULT_SPEED_MASK 0x3FF0000
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_SDCLK_FREQUENCY_SELECT_VALUE_FOR_DEFAULT_SPEED_SHIFT 16 
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_SDCLK_FREQUENCY_SELECT_VALUE_FOR_DEFAULT_SPEED_BIT 0x3FF
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_SDCLK_FREQUENCY_SELECT_VALUE_FOR_DEFAULT_SPEED_BITWIDTH 10
// Clock_Generator_Select_Value_for_Default_Speed bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_CLOCK_GENERATOR_SELECT_VALUE_FOR_DEFAULT_SPEED_MASK 0x4000000
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_CLOCK_GENERATOR_SELECT_VALUE_FOR_DEFAULT_SPEED_SHIFT 26 
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_CLOCK_GENERATOR_SELECT_VALUE_FOR_DEFAULT_SPEED_BIT 0x1
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_CLOCK_GENERATOR_SELECT_VALUE_FOR_DEFAULT_SPEED_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_RESERVED_MASK 0x38000000
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_RESERVED_SHIFT 27 
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_RESERVED_BIT 0x7
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_RESERVED_BITWIDTH 3
// Driver_Strength_Select_Value_for_Default_Speed bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_DRIVER_STRENGTH_SELECT_VALUE_FOR_DEFAULT_SPEED_MASK 0xC0000000
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_DRIVER_STRENGTH_SELECT_VALUE_FOR_DEFAULT_SPEED_SHIFT 30 
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_DRIVER_STRENGTH_SELECT_VALUE_FOR_DEFAULT_SPEED_BIT 0x3
#define EMMCA_PRESET_VALUE_FOR_DEFAULT_SPEED_INITIALIZATION_DRIVER_STRENGTH_SELECT_VALUE_FOR_DEFAULT_SPEED_BITWIDTH 2
// Preset_Value_for_SDR12_High_Speed Register
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_OFS 0x00000064
// SDCLK_Frequency_Select_Value_for_High_Speed bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_SDCLK_FREQUENCY_SELECT_VALUE_FOR_HIGH_SPEED_MASK 0x3FF
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_SDCLK_FREQUENCY_SELECT_VALUE_FOR_HIGH_SPEED_SHIFT 0 
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_SDCLK_FREQUENCY_SELECT_VALUE_FOR_HIGH_SPEED_BIT 0x3FF
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_SDCLK_FREQUENCY_SELECT_VALUE_FOR_HIGH_SPEED_BITWIDTH 10
// Clock_Generator_Select_Value_for_High_Speed bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_CLOCK_GENERATOR_SELECT_VALUE_FOR_HIGH_SPEED_MASK 0x400
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_CLOCK_GENERATOR_SELECT_VALUE_FOR_HIGH_SPEED_SHIFT 10 
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_CLOCK_GENERATOR_SELECT_VALUE_FOR_HIGH_SPEED_BIT 0x1
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_CLOCK_GENERATOR_SELECT_VALUE_FOR_HIGH_SPEED_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_RESERVED2_MASK 0x3800
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_RESERVED2_SHIFT 11 
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_RESERVED2_BIT 0x7
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_RESERVED2_BITWIDTH 3
// Driver_Strength_Select_Value_for_High_Speed bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_DRIVER_STRENGTH_SELECT_VALUE_FOR_HIGH_SPEED_MASK 0xC000
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_DRIVER_STRENGTH_SELECT_VALUE_FOR_HIGH_SPEED_SHIFT 14 
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_DRIVER_STRENGTH_SELECT_VALUE_FOR_HIGH_SPEED_BIT 0x3
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_DRIVER_STRENGTH_SELECT_VALUE_FOR_HIGH_SPEED_BITWIDTH 2
// SDCLK_Frequency_Select_Value_for_SDR12 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR12_MASK 0x3FF0000
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR12_SHIFT 16 
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR12_BIT 0x3FF
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR12_BITWIDTH 10
// Clock_Generator_Select_Value_for_SDR12 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR12_MASK 0x4000000
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR12_SHIFT 26 
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR12_BIT 0x1
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR12_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_RESERVED_MASK 0x38000000
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_RESERVED_SHIFT 27 
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_RESERVED_BIT 0x7
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_RESERVED_BITWIDTH 3
// Driver_Strength_Select_Value_for_SDR12 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR12_MASK 0xC0000000
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR12_SHIFT 30 
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR12_BIT 0x3
#define EMMCA_PRESET_VALUE_FOR_SDR12_HIGH_SPEED_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR12_BITWIDTH 2
// Preset_Value_for_SDR50_SDR25 Register
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_OFS   0x00000068
// SDCLK_Frequency_Select_Value_for_SDR25 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR25_MASK 0x3FF
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR25_SHIFT 0 
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR25_BIT 0x3FF
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR25_BITWIDTH 10
// Clock_Generator_Select_Value_for_SDR25 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR25_MASK 0x400
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR25_SHIFT 10 
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR25_BIT 0x1
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR25_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_RESERVED2_MASK 0x3800
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_RESERVED2_SHIFT 11 
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_RESERVED2_BIT 0x7
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_RESERVED2_BITWIDTH 3
// Driver_Strength_Select_Value_for_SDR25 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR25_MASK 0xC000
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR25_SHIFT 14 
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR25_BIT 0x3
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR25_BITWIDTH 2
// SDCLK_Frequency_Select_Value_for_SDR50 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR50_MASK 0x3FF0000
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR50_SHIFT 16 
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR50_BIT 0x3FF
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR50_BITWIDTH 10
// Clock_Generator_Select_Value_for_SDR50 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR50_MASK 0x4000000
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR50_SHIFT 26 
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR50_BIT 0x1
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR50_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_RESERVED_MASK 0x38000000
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_RESERVED_SHIFT 27 
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_RESERVED_BIT 0x7
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_RESERVED_BITWIDTH 3
// Driver_Strength_Select_Value_for_SDR50 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR50_MASK 0xC0000000
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR50_SHIFT 30 
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR50_BIT 0x3
#define EMMCA_PRESET_VALUE_FOR_SDR50_SDR25_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR50_BITWIDTH 2
// Preset_Value_for_DDR50_SDR104 Register
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_OFS  0x0000006C
// SDCLK_Frequency_Select_Value_for_SDR104 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR104_MASK 0x3FF
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR104_SHIFT 0 
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR104_BIT 0x3FF
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_SDCLK_FREQUENCY_SELECT_VALUE_FOR_SDR104_BITWIDTH 10
// Clock_Generator_Select_Value_for_SDR104 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR104_MASK 0x400
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR104_SHIFT 10 
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR104_BIT 0x1
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_CLOCK_GENERATOR_SELECT_VALUE_FOR_SDR104_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_RESERVED2_MASK 0x3800
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_RESERVED2_SHIFT 11 
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_RESERVED2_BIT 0x7
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_RESERVED2_BITWIDTH 3
// Driver_Strength_Select_Value_for_SDR104 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR104_MASK 0xC000
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR104_SHIFT 14 
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR104_BIT 0x3
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_DRIVER_STRENGTH_SELECT_VALUE_FOR_SDR104_BITWIDTH 2
// SDCLK_Frequency_Select_Value_for_DDR50 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_SDCLK_FREQUENCY_SELECT_VALUE_FOR_DDR50_MASK 0x3FF0000
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_SDCLK_FREQUENCY_SELECT_VALUE_FOR_DDR50_SHIFT 16 
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_SDCLK_FREQUENCY_SELECT_VALUE_FOR_DDR50_BIT 0x3FF
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_SDCLK_FREQUENCY_SELECT_VALUE_FOR_DDR50_BITWIDTH 10
// Clock_Generator_Select_Value_for_DDR50 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_CLOCK_GENERATOR_SELECT_VALUE_FOR_DDR50_MASK 0x4000000
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_CLOCK_GENERATOR_SELECT_VALUE_FOR_DDR50_SHIFT 26 
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_CLOCK_GENERATOR_SELECT_VALUE_FOR_DDR50_BIT 0x1
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_CLOCK_GENERATOR_SELECT_VALUE_FOR_DDR50_BITWIDTH 1
// Reserved bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_RESERVED_MASK 0x38000000
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_RESERVED_SHIFT 27 
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_RESERVED_BIT 0x7
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_RESERVED_BITWIDTH 3
// Driver_Strength_Select_Value_for_DDR50 bitfiled (RO) Reset=0
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_DRIVER_STRENGTH_SELECT_VALUE_FOR_DDR50_MASK 0xC0000000
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_DRIVER_STRENGTH_SELECT_VALUE_FOR_DDR50_SHIFT 30 
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_DRIVER_STRENGTH_SELECT_VALUE_FOR_DDR50_BIT 0x3
#define EMMCA_PRESET_VALUE_FOR_DDR50_SDR104_DRIVER_STRENGTH_SELECT_VALUE_FOR_DDR50_BITWIDTH 2
// Boot_Timeout_Control Register
#define EMMCA_BOOT_TIMEOUT_CONTROL_OFS           0x00000070
// Boot_Data_Timeout_Counter_Value bitfiled (RW) Reset=0
#define EMMCA_BOOT_TIMEOUT_CONTROL_BOOT_DATA_TIMEOUT_COUNTER_VALUE_MASK 0xFFFFFFFF
#define EMMCA_BOOT_TIMEOUT_CONTROL_BOOT_DATA_TIMEOUT_COUNTER_VALUE_SHIFT 0 
#define EMMCA_BOOT_TIMEOUT_CONTROL_BOOT_DATA_TIMEOUT_COUNTER_VALUE_BIT 0xFFFFFFFF
#define EMMCA_BOOT_TIMEOUT_CONTROL_BOOT_DATA_TIMEOUT_COUNTER_VALUE_BITWIDTH 32
// Shared_Bus_Control Register
#define EMMCA_SHARED_BUS_CONTROL_OFS             0x000000E0
// Reserved bitfiled (RO) Reset=0
#define EMMCA_SHARED_BUS_CONTROL_RESERVED_MASK   0xFFFFFFFF
#define EMMCA_SHARED_BUS_CONTROL_RESERVED_SHIFT  0 
#define EMMCA_SHARED_BUS_CONTROL_RESERVED_BIT    0xFFFFFFFF
#define EMMCA_SHARED_BUS_CONTROL_RESERVED_BITWIDTH 32
// Host_Controller_Version_Slot_Interrupt_Status Register
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_OFS 0x000000FC
// Interrupt_Signal_for_Slot0 bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_INTERRUPT_SIGNAL_FOR_SLOT0_MASK 0x1
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_INTERRUPT_SIGNAL_FOR_SLOT0_SHIFT 0 
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_INTERRUPT_SIGNAL_FOR_SLOT0_BIT 0x1
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_INTERRUPT_SIGNAL_FOR_SLOT0_BITWIDTH 1
// Reserved2 bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_RESERVED2_MASK 0xFE
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_RESERVED2_SHIFT 1 
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_RESERVED2_BIT 0x7F
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_RESERVED2_BITWIDTH 7
// Reserved bitfiled (RO) Reset=0
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_RESERVED_MASK 0xFF00
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_RESERVED_SHIFT 8 
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_RESERVED_BIT 0xFF
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_RESERVED_BITWIDTH 8
// Specification_Version_Number bitfiled (RO) Reset=10
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_SPECIFICATION_VERSION_NUMBER_MASK 0xFF0000
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_SPECIFICATION_VERSION_NUMBER_SHIFT 16 
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_SPECIFICATION_VERSION_NUMBER_BIT 0xFF
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_SPECIFICATION_VERSION_NUMBER_BITWIDTH 8
// Vendor_Version_Number bitfiled (RO) Reset=10000
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_VENDOR_VERSION_NUMBER_MASK 0xFF000000
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_VENDOR_VERSION_NUMBER_SHIFT 24 
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_VENDOR_VERSION_NUMBER_BIT 0xFF
#define EMMCA_HOST_CONTROLLER_VERSION_SLOT_INTERRUPT_STATUS_VENDOR_VERSION_NUMBER_BITWIDTH 8

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _EMMCA_REG_DEF_H */
