/*
 * linux/arch/arm/mach-tz2000/include/mach/platform.h
 *
 * (C) Copyright TOSHIBA CORPORATION SEMICONDUCTOR COMPANY 2010
 * (C) Copyright TOSHIBA CORPORATION
 *      SEMICONDUCTOR & STORAGE PRODUCTS COMPANY 2013
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */
#ifndef __ASM_ARCH_PLATFORM_H
#define __ASM_ARCH_PLATFORM_H

#ifndef __ASSEMBLY__
#include <linux/delay.h>
#include <linux/io.h>
#endif

#define TZ2000_PERIPHERAL_BASE		0x08000000
#define TZ2000_PERIPHERAL_SIZE		0x00130000
#define TZ2000_GCONF_BASE		0x00401000
#define TZ2000_GCONF_SIZE		0x00001000
#define TZ2000_PMU_BASE			0x00440000
#define TZ2000_PMU_SIZE			0x00010000
#define TZ2000_SCOMM_BASE		0x00580000
#define TZ2000_SCOMM_SIZE		0x00001000
#define TZ2000_MBOOT_BASE		0x00000000
#define TZ2000_MBOOT_SIZE		0x00001000

#define TZ2000_WCONF_BASE		0x0a2c0000
#define TZ2000_ETHERMAC_BASE		0x0a180000
#define TZ2000_EMMC4SD_BASE		0x0a1c0000
#define TZ2000_EMMC8SD_BASE		0x0a280000
#define TZ2000_USB2H_EHCI_BASE		0x0a0c0000
#define TZ2000_USB2H_OHCI_BASE		0x0a0e0000
#define TZ2000_UART_BASE		0x08000000
#define TZ2000_I2C_BASE			0x08010000
#define TZ2000_TMR_BASE			0x080a0000
#define TZ2000_GPIO_BASE		0x08090000
#define TZ2000_SPIMS_BASE		0x08030000
#define TZ2000_SPI_BASE			0x08050000
#define TZ2000_MBOX_BASE		0x080c0000

#define TZ2000_CPU_BASE			0x0f100000
#define TZ2000_CPU_SIZE			0x00004000
#define TZ2000_GIC_CPU_BASE		0x0f100100
#define TZ2000_GLOBAL_TMR_BASE		0x0f100200
#define TZ2000_PRIVATE_TMR_BASE		0x0f100600
#define TZ2000_GIC_DIST_BASE		0x0f101000
#define TZ2000_SPI_FLASH_BASE		0x20000000

#define TZ2000_I2SI_BASE		0x08060000
#define TZ2000_I2SO_BASE		0x08070000
#define TZ2000_I2SC_BASE		0x08080000

#define TZ2000_BOOTINFO_BASE		(TZ2000_SCOMM_BASE + 0x600)
#define TZ2000_BOOTINFO_FWREV0		(TZ2000_BOOTINFO_BASE + 0x00)
#define TZ2000_BOOTINFO_FWREV1		(TZ2000_BOOTINFO_BASE + 0x04)

#define TZ2000_PLLCLK			200000000
#define TXSS_PERIPHCLK			(TZ2000_PLLCLK / 16)

#define TZ2000_GCONF_PINSHARE0		(TZ2000_GCONF_BASE + 0x10)
#define TZ2000_GCONF_PINSHARE1		(TZ2000_GCONF_BASE + 0x14)
#define TZ2000_GCONF_PINSHARE2		(TZ2000_GCONF_BASE + 0x20)
#define TZ2000_GCONF_GDMAC_CTRL0	(TZ2000_GCONF_BASE + 0x40)
#define TZ2000_GCONF_GDMAC_CTRL1	(TZ2000_GCONF_BASE + 0x44)
#define TZ2000_GCONF_GDMAC_CTRL2	(TZ2000_GCONF_BASE + 0x48)
#define TZ2000_GCONF_GDMAC_CTRL3	(TZ2000_GCONF_BASE + 0x4c)
#define TZ2000_GCONF_GDMAC_CTRL4	(TZ2000_GCONF_BASE + 0x50)
#define TZ2000_GCONF_GDMAC_CTRL5	(TZ2000_GCONF_BASE + 0x54)

#define TZ2000_PMU_CGON			(TZ2000_PMU_BASE + 0x1000)
#define TZ2000_PMU_CGON_PERI0		(TZ2000_PMU_CGON + 0x020)
#define TZ2000_PMU_CGON_PERI1		(TZ2000_PMU_CGON + 0x024)
#define TZ2000_PMU_CGON_PERI2		(TZ2000_PMU_CGON + 0x028)
#define TZ2000_PMU_CGON_PERI3		(TZ2000_PMU_CGON + 0x02c)
#define TZ2000_PMU_CGON_PERI4		(TZ2000_PMU_CGON + 0x030)
#define TZ2000_PMU_CGON_USB2HD		(TZ2000_PMU_CGON + 0x118)
#define TZ2000_PMU_CGON_ETHER		(TZ2000_PMU_CGON + 0x190)
#define TZ2000_PMU_CGON_EMMC		(TZ2000_PMU_CGON + 0x1a0)
#define TZ2000_PMU_CGON_TELOMERE	(TZ2000_PMU_CGON + 0x1c0)
#define TZ2000_PMU_CGOFF		(TZ2000_PMU_BASE + 0x1400)
#define TZ2000_PMU_CGOFF_PERI0		(TZ2000_PMU_CGOFF + 0x020)
#define TZ2000_PMU_CGOFF_PERI1		(TZ2000_PMU_CGOFF + 0x024)
#define TZ2000_PMU_CGOFF_PERI2		(TZ2000_PMU_CGOFF + 0x028)
#define TZ2000_PMU_CGOFF_PERI3		(TZ2000_PMU_CGOFF + 0x02c)
#define TZ2000_PMU_CGOFF_PERI4		(TZ2000_PMU_CGOFF + 0x030)
#define TZ2000_PMU_CGOFF_USB2HD		(TZ2000_PMU_CGOFF + 0x118)
#define TZ2000_PMU_CGOFF_ETHER		(TZ2000_PMU_CGOFF + 0x190)
#define TZ2000_PMU_CGOFF_EMMC		(TZ2000_PMU_CGOFF + 0x1a0)
#define TZ2000_PMU_CGOFF_TELOMERE	(TZ2000_PMU_CGOFF + 0x1c0)
#define TZ2000_PMU_SRON			(TZ2000_PMU_BASE + 0x1800)
#define TZ2000_PMU_SRON_PERI0		(TZ2000_PMU_SRON + 0x020)
#define TZ2000_PMU_SRON_PERI1		(TZ2000_PMU_SRON + 0x024)
#define TZ2000_PMU_SRON_PERI2		(TZ2000_PMU_SRON + 0x028)
#define TZ2000_PMU_SRON_PERI3		(TZ2000_PMU_SRON + 0x02c)
#define TZ2000_PMU_SRON_PERI4		(TZ2000_PMU_SRON + 0x030)
#define TZ2000_PMU_SRON_USB2HD		(TZ2000_PMU_SRON + 0x118)
#define TZ2000_PMU_SRON_ETHER		(TZ2000_PMU_SRON + 0x190)
#define TZ2000_PMU_SRON_EMMC		(TZ2000_PMU_SRON + 0x1a0)
#define TZ2000_PMU_SRON_TELOMERE	(TZ2000_PMU_SRON + 0x1c0)
#define TZ2000_PMU_SROFF		(TZ2000_PMU_BASE + 0x1c00)
#define TZ2000_PMU_SROFF_PERI0		(TZ2000_PMU_SROFF + 0x020)
#define TZ2000_PMU_SROFF_PERI1		(TZ2000_PMU_SROFF + 0x024)
#define TZ2000_PMU_SROFF_PERI2		(TZ2000_PMU_SROFF + 0x028)
#define TZ2000_PMU_SROFF_PERI3		(TZ2000_PMU_SROFF + 0x02c)
#define TZ2000_PMU_SROFF_PERI4		(TZ2000_PMU_SROFF + 0x030)
#define TZ2000_PMU_SROFF_USB2HD		(TZ2000_PMU_SROFF + 0x118)
#define TZ2000_PMU_SROFF_ETHER		(TZ2000_PMU_SROFF + 0x190)
#define TZ2000_PMU_SROFF_EMMC		(TZ2000_PMU_SROFF + 0x1a0)
#define TZ2000_PMU_SROFF_TELOMERE	(TZ2000_PMU_SROFF + 0x1c0)
#define TZ2000_PMU_POREN		(TZ2000_PMU_BASE + 0x2400)
#define TZ2000_PMU_USB_CONTROL		(TZ2000_PMU_BASE + 0x2484)

#define TZ2000_WCONF_EMMC_BASE(ch)	(TZ2000_WCONF_BASE + (ch) * 0x100)

#define TZ2000_SPIC_ID			0
#define TZ2000_SPIC_INITIAL_SPEED_HZ	18750000
#define TZ2000_SPIC_INITIAL_DEASSERT_TIME	1275

#define TZ2000_SPIMS_ID			1
#define TZ2000_SPIMS_NUM		2

#define I2C_TZ2000_CH_NUM	4

#define I2C_TZ2000_REG(ch)	(TZ2000_I2C_BASE + (ch) * 0x1000)

#define TZ2000_GPIO_REG(x)	(TZ2000_GPIO_BASE + (x) * 0x1000)
#define TZ2000_GP_DR(x)			(TZ2000_GPIO_REG(x) + 0x04)
#define TZ2000_GP_SMP(x)		(TZ2000_GPIO_REG(x) + 0x30)

#define TZ2000_SPIMS_REG(x)	(TZ2000_SPIMS_BASE + (x) * 0x10000)

#ifndef __ASSEMBLY__
void tz2000_enter_suspend(void);
void v7_cpu_resume(void);
#endif

#endif /* __ASM_ARCH_PLATFORM_H */
